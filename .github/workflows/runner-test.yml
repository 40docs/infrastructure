name: "Test Self-Hosted Runners"

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/runner-test.yml'
      - 'cloud-init/CLOUDSHELL.conf'
      - 'cloudshell.tf'
    branches:
      - main
      - chore/remove-claude-github-actions
  schedule:
    # Run daily at 2 AM UTC to verify runners are operational
    - cron: '0 2 * * *'

permissions:
  contents: read

jobs:
  test-cloudshell-specific:
    name: "Test CLOUDSHELL Runner (Specific Label)"
    runs-on: CLOUDSHELL
    timeout-minutes: 5
    continue-on-error: true

    steps:
      - name: "Runner Status"
        run: |
          echo "Testing CLOUDSHELL GitHub Actions Runner (Specific Label)"
          echo "========================================================="
          echo "Hostname: $(hostname)"
          echo "User: $(whoami)"
          echo "Working Directory: $(pwd)"
          echo "Timestamp: $(date '+%Y-%m-%d %H:%M:%S %Z')"
          echo ""

      - name: "Environment Info"
        run: |
          echo "System Information:"
          echo "==================="
          echo "OS: $(lsb_release -d | cut -f2)"
          echo "Kernel: $(uname -r)"
          echo "CPU Cores: $(nproc)"
          echo "Memory: $(free -h | grep Mem | awk '{print $2}')"
          echo ""

      - name: "Service Check"
        run: |
          echo "Runner Service Status:"
          echo "====================="
          # Check for any actions.runner service
          if systemctl list-units --type=service --state=running | grep -q "actions.runner"; then
            echo "✅ Runner service is active and running"
            systemctl list-units --type=service --state=running | grep "actions.runner"
          else
            echo "⚠️  No active runner service found with pattern 'actions.runner'"
            echo "Checking all systemd services:"
            systemctl list-units --type=service --state=running | grep -i runner || echo "No runner services found"
          fi
          echo ""

      - name: "GitHub Connectivity"
        run: |
          echo "GitHub API Test:"
          echo "================"
          if curl -s https://api.github.com/zen; then
            echo "✅ Successfully connected to GitHub API"
          else
            echo "❌ Failed to connect to GitHub API"
            exit 1
          fi
          echo ""

      - name: "Runner Configuration"
        run: |
          echo "Runner Configuration:"
          echo "===================="
          if [ -f /home/ubuntu/actions-runner/.runner ]; then
            echo "Runner config file exists at /home/ubuntu/actions-runner/.runner"
            echo "Runner Name: $(grep '"name"' /home/ubuntu/actions-runner/.runner 2>/dev/null | cut -d'"' -f4 || echo 'Unknown')"
            echo "Runner Labels: $(grep '"labels"' /home/ubuntu/actions-runner/.credentials_rsaparams 2>/dev/null | cut -d'"' -f4 || echo 'Check failed - normal if file is encrypted')"
          else
            echo "⚠️  Runner config not found at expected location"
          fi
          echo ""

      - name: "Test Complete"
        run: |
          echo "✅ CLOUDSHELL runner test completed!"
          echo "Workflow Run ID: ${{ github.run_id }}"

  test-cloudshell-lowercase:
    name: "Test cloudshell Runner (Lowercase Label)"
    runs-on: cloudshell
    timeout-minutes: 5
    continue-on-error: true

    steps:
      - name: "Runner Status"
        run: |
          echo "Testing cloudshell GitHub Actions Runner (Lowercase Label)"
          echo "=========================================================="
          echo "Hostname: $(hostname)"
          echo "User: $(whoami)"
          echo "Timestamp: $(date '+%Y-%m-%d %H:%M:%S %Z')"
          echo ""

      - name: "Test Complete"
        run: |
          echo "✅ cloudshell (lowercase) runner is working properly!"
          echo "Workflow Run ID: ${{ github.run_id }}"

  test-self-hosted:
    name: "Test Self-Hosted Runner (Generic)"
    runs-on: [self-hosted, linux]
    timeout-minutes: 5
    continue-on-error: true

    steps:
      - name: "Runner Info"
        run: |
          echo "Testing Self-Hosted GitHub Actions Runner"
          echo "========================================="
          echo "Hostname: $(hostname)"
          echo "User: $(whoami)"
          echo "Working Directory: $(pwd)"
          echo "Timestamp: $(date '+%Y-%m-%d %H:%M:%S %Z')"
          echo ""

      - name: "Environment Details"
        run: |
          echo "Runner Details:"
          echo "==============="
          echo "Working Directory: $(pwd)"
          echo "Runner Workspace: ${RUNNER_WORKSPACE:-Not Set}"
          echo "Runner Temp: ${RUNNER_TEMP:-Not Set}"
          echo "Runner Tool Cache: ${RUNNER_TOOL_CACHE:-Not Set}"
          echo ""

      - name: "Test Complete"
        run: |
          echo "✅ Self-hosted runner is working properly!"
          echo "Workflow Run ID: ${{ github.run_id }}"

  summary:
    name: "Test Summary"
    needs: [test-cloudshell-specific, test-cloudshell-lowercase, test-self-hosted]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: "Report Results"
        run: |
          echo "Runner Test Summary"
          echo "==================="
          echo ""
          
          if [ "${{ needs.test-cloudshell-specific.result }}" == "success" ]; then
            echo "✅ CLOUDSHELL (uppercase) runner: PASSED"
          elif [ "${{ needs.test-cloudshell-specific.result }}" == "skipped" ]; then
            echo "⏭️  CLOUDSHELL (uppercase) runner: SKIPPED (runner not available)"
          else
            echo "❌ CLOUDSHELL (uppercase) runner: FAILED or NOT AVAILABLE"
          fi
          
          if [ "${{ needs.test-cloudshell-lowercase.result }}" == "success" ]; then
            echo "✅ cloudshell (lowercase) runner: PASSED"
          elif [ "${{ needs.test-cloudshell-lowercase.result }}" == "skipped" ]; then
            echo "⏭️  cloudshell (lowercase) runner: SKIPPED (runner not available)"
          else
            echo "❌ cloudshell (lowercase) runner: FAILED or NOT AVAILABLE"
          fi
          
          if [ "${{ needs.test-self-hosted.result }}" == "success" ]; then
            echo "✅ self-hosted runner: PASSED"
          elif [ "${{ needs.test-self-hosted.result }}" == "skipped" ]; then
            echo "⏭️  self-hosted runner: SKIPPED (runner not available)"
          else
            echo "❌ self-hosted runner: FAILED or NOT AVAILABLE"
          fi
          
          echo ""
          echo "Note: At least one runner configuration should be working."
          echo "The CLOUDSHELL VM registers with both 'CLOUDSHELL' and 'cloudshell' labels."