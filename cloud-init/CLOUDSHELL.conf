#cloud-config

timezone: America/Toronto
package_update: true
package_upgrade: true
package_reboot_if_required: true

bootcmd:
  - mkdir -p /home
  - mkdir -p /var/lib/docker
  - mkdir -p /root/.ollama
  - |
    for lun in 0 1 2; do
      dev="/dev/disk/azure/scsi1/lun$${lun}"
      echo "Waiting for $dev ..."
      for i in $(seq 1 30); do
        if [ -b "$dev" ]; then
          echo "$dev is present."
          break
        fi
        sleep 2
      done
    done
  # Detect if lun0 already has a filesystem, and skip overwrite if so
  - |
    if blkid /dev/disk/azure/scsi1/lun0-part1 >/dev/null 2>&1; then
      echo "lun0 already has a filesystem â€” disabling overwrite"
      sed -i 's|overwrite: true|overwrite: false|' /etc/cloud/cloud.cfg.d/99-disk_setup.cfg || true
    fi

disk_setup:
  /dev/disk/azure/scsi1/lun0:
    table_type: gpt
    layout:
      - [100, 83]
    overwrite: true
  /dev/disk/azure/scsi1/lun1:
    table_type: gpt
    layout:
      - [100, 83]
    overwrite: false
  /dev/disk/azure/scsi1/lun2:
    table_type: gpt
    layout:
      - [100, 83]
    overwrite: false

fs_setup:
  - device: /dev/disk/azure/scsi1/lun0-part1
    filesystem: ext4
    overwrite: true
    label: homefs
  - device: /dev/disk/azure/scsi1/lun1-part1
    filesystem: ext4
    overwrite: false
    label: dockerfs
  - device: /dev/disk/azure/scsi1/lun2-part1
    filesystem: ext4
    overwrite: false
    label: ollamafs

mounts:
  - [ "LABEL=homefs", "/home", "ext4", "defaults,nofail", "0", "2" ]
  - [ "LABEL=dockerfs", "/var/lib/docker", "ext4", "defaults,nofail", "0", "2" ]
  - [ "LABEL=ollamafs", "/root/.ollama", "ext4", "defaults,nofail", "0", "2" ]

ssh_deletekeys: false
ssh_keys:
  rsa_private: |
    ${indent(4, var_ssh_host_rsa_private)}
  rsa_public: |
    ${indent(4, var_ssh_host_rsa_public)}
  ecdsa_private: |
    ${indent(4, var_ssh_host_ecdsa_private)}
  ecdsa_public: |
    ${indent(4, var_ssh_host_ecdsa_public)}
  ed25519_private: |
    ${indent(4, var_ssh_host_ed25519_private)}
  ed25519_public: |
    ${indent(4, var_ssh_host_ed25519_public)}

apt:
  sources:
    authd:
      source: ppa:ubuntu-enterprise-desktop/authd
    dotnet:
      source: ppa:dotnet/backports
    ansible:
      source: ppa:ansible/ansible
    nvtop:
      source: ppa:quentiumyt/nvtop
    hashicorp:
      source: deb [arch=amd64 signed-by=$KEY_FILE] https://apt.releases.hashicorp.com $RELEASE main
      keyserver: https://apt.releases.hashicorp.com/gpg
      keyid: AA16FCBCA621E701
    github-cli:
      source: deb [arch=amd64 signed-by=$KEY_FILE] https://cli.github.com/packages stable main
      keyserver: https://cli.github.com/packages/githubcli-archive-keyring.gpg
      keyid: 23F3D4EA75716059
    google-cloud-sdk:
      source: deb [arch=amd64 signed-by=$KEY_FILE] http://packages.cloud.google.com/apt cloud-sdk main
      keyserver: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      keyid: C0BA5CE6DC6315A3
    google-chrome:
      source: deb [arch=amd64 signed-by=$KEY_FILE] http://dl.google.com/linux/chrome/deb/ stable main
      keyserver: https://dl-ssl.google.com/linux/linux_signing_key.pub
      keyid: 7721F63BD38B4796
    docker:
      source: deb [arch=amd64 signed-by=$KEY_FILE] https://download.docker.com/linux/ubuntu noble stable
      keyserver: https://download.docker.com/linux/ubuntu/gpg
      keyid: 8D81803C0EBFCD88
    azure-cli:
      source: deb [arch=amd64 signed-by=$KEY_FILE] https://packages.microsoft.com/repos/azure-cli/ $RELEASE main
      keyserver: https://packages.microsoft.com/keys/microsoft.asc
      keyid: EB3E94ADBE1229CF
    vscode:
      source: deb [arch=amd64 signed-by=$KEY_FILE] https://packages.microsoft.com/repos/vscode stable main
      keyserver: https://packages.microsoft.com/keys/microsoft.asc
      keyid: EB3E94ADBE1229CF
    powershell:
      source: deb [arch=amd64 signed-by=$KEY_FILE] https://packages.microsoft.com/ubuntu/24.04/prod $RELEASE main
      keyserver: https://packages.microsoft.com/keys/microsoft.asc
      keyid: EB3E94ADBE1229CF
    ubuntu-universe:
      source: "deb http://archive.ubuntu.com/ubuntu $RELEASE universe"
    ubuntu-multiverse:
      source: "deb http://archive.ubuntu.com/ubuntu $RELEASE multiverse"

write_files:
  - path: /etc/ssh/sshd_config.d/custom.conf
    content: |
      UsePAM yes
      KbdInteractiveAuthentication yes

packages:
  #- authd
  - snapd

#snap:
#  commands:
#    01: snap install authd-msentraid

runcmd:
  - |
    DEBIAN_FRONTEND=noninteractive apt install authd -y
    systemctl enable --now snapd
    snap install authd-msentraid
    systemctl stop authd authd.socket ssh systemd-logind ssh.socket
    snap stop authd-msentraid
    mkdir -p /etc/authd/brokers.d/
    chmod 700 /etc/authd
    chmod 700 /etc/authd/brokers.d
    cp /snap/authd-msentraid/current/conf/authd/msentraid.conf /etc/authd/brokers.d/msentraid.conf
    sed -i \
      -e 's|issuer = https://login.microsoftonline.com/<ISSUER_ID>/v2.0|issuer = "https://login.microsoftonline.com/${var_directory_tenant_id}/v2.0"|' \
      -e 's|client_id = <CLIENT_ID>|client_id = "${var_directory_client_id}"|' \
      /var/snap/authd-msentraid/current/broker.conf
    sed -i 's/^#allowed_users = OWNER$/allowed_users = ALL/' /var/snap/authd-msentraid/current/broker.conf
    echo 'ssh_allowed_suffixes = @fortinet-us.com' >> /var/snap/authd-msentraid/current/broker.conf
    rm -rf /var/lib/authd
    mkdir -p /var/lib/authd
    chmod 700 /var/lib/authd
    systemctl start authd
    until systemctl is-active --quiet authd; do sleep 1; done
    snap start authd-msentraid
    systemctl start ssh systemd-logind ssh.socket

packages:
  - alsa-utils
  - ansible
  - ansible-lint
  - apache2-utils
  - apparmor
  - apt-transport-https
  - asciidoctor
  - aspnetcore-runtime-9.0
  - autoconf
  - azure-cli
  - bash-completion
  - bat
  - build-essential
  - cabextract
  - ca-certificates
  - cockpit
  - code
  - code-insiders
  - cmake
  - curl
  - dos2unix
  - docker-ce
  - docker-ce-cli
  - containerd.io
  - docker-compose-plugin
  - docker-ce-rootless-extras
  - docker-buildx-plugin
  - dotnet-sdk-9.0
  - dotnet-sdk-8.0
  - dotnet-sdk-6.0
  - dpkg
  - dpkg-dev
  - dnsutils
  - fail2ban
  - ffmpeg
  - file
  - fontconfig
  - fonts-powerline
  - frei0r-plugins
  - fuse3
  - fzf
  - g++
  - gh
  - gnupg
  - golang-go
  - graphviz
  - gstreamer1.0-libav
  - gstreamer1.0-vaapi
  - gstreamer1.0-plugins-base
  - gstreamer1.0-plugins-good
  - gstreamer1.0-plugins-bad
  - gstreamer1.0-plugins-ugly
  - google-cloud-cli
  - google-chrome-stable
  - hwloc
  - imagemagick
  - inkscape
  - iputils-ping
  - kubectl
  - ladspa-sdk
  - libapache2-mod-php
  - libavif-dev
  - libc6
  - libfuse3-3
  - libgcc-s1
  - libgstreamer1.0-0
  - libicu74
  - liblttng-ust1t64
  - libappindicator3-1
  - libdbusmenu-glib4
  - libdbusmenu-gtk3-4
  - libfftw3-bin
  - libfftw3-dev
  - libfftw3-long3
  - libfftw3-quad3
  - libfftw3-single3
  - libfuse2t64
  - libgavl2
  - libgl1-mesa-dri
  - libgl1
  - libgif-dev
  - libglu1-mesa
  - libhwloc-dev
  - libhwloc15
  - libicu-dev
  - libmovit-dev
  - libnotify4
  - libnuma-dev
  - libpoppler-cpp-dev
  - librust-gdk-pixbuf-sys-dev
  - libsecret-1-0
  - libsecret-1-dev
  - libsecret-common
  - libsox-fmt-all
  - libstdc++6
  - libssl3t64
  - libslirp0
  - libglx-mesa0
  - libunwind8
  - libvulkan1
  - libvidstab-dev
  - libyelp-dev
  - locales
  - locales-all
  - lsb-release
  - lsd
  - make
  - melt
  - mesa-utils
  - mesa-utils-bin
  - mesa-vulkan-drivers
  - mtr
  - nmap
  - npm
  - nvidia-driver-575
  - nvtop
  - php
  - php-cli
  - php-cgi
  - php-mysql
  - php-pgsql
  - pigz
  - pkexec
  - pkg-config
  - policykit-1
  - postgresql
  - postgresql-contrib
  - poppler-utils
  - powershell
  - python3-full
  - python3-pip
  - python3-venv
  - shellcheck
  - skopeo
  - slirp4netns
  - snapd
  - software-properties-common
  - squashfs-tools
  - swh-plugins
  - sox
  - sqlite3
  - terraform
  - tesseract-ocr
  - tini
  - tcpdump
  - tofrodos
  - trivy
  - ubuntu-drivers-common
  - unzip
  - vlc
  - vim-syntastic
  - weasyprint
  - xvfb
  - xdg-utils
  - yq
  - yamllint
  - yelp-tools
  - zsh
  - zlib1g
