#cloud-config

package_update: true
package_upgrade: true
package_reboot_if_required: true

ssh_deletekeys: false
ssh_keys:
  rsa_private: |
    ${indent(4, VAR_ssh_host_rsa_private)}
  rsa_public: |
    ${indent(4, VAR_ssh_host_rsa_public)}
  ecdsa_private: |
    ${indent(4, VAR_ssh_host_ecdsa_private)}
  ecdsa_public: |
    ${indent(4, VAR_ssh_host_ecdsa_public)}
  ed25519_private: |
    ${indent(4, VAR_ssh_host_ed25519_private)}
  ed25519_public: |
    ${indent(4, VAR_ssh_host_ed25519_public)}

apt:
  sources:
    authd:
      source: ppa:ubuntu-enterprise-desktop/authd
    ansible:
      source: ppa:ansible/ansible
    hashicorp:
      source: deb [arch=amd64 signed-by=$KEY_FILE] https://apt.releases.hashicorp.com $RELEASE main
      keyserver: https://apt.releases.hashicorp.com/gpg
      keyid: AA16FCBCA621E701
    github-cli:
      source: deb [arch=amd64 signed-by=$KEY_FILE] https://cli.github.com/packages stable main
      keyserver: https://cli.github.com/packages/githubcli-archive-keyring.gpg
      keyid: 23F3D4EA75716059
    azure-cli:
      source: deb [arch=amd64 signed-by=$KEY_FILE] https://packages.microsoft.com/repos/azure-cli/ $RELEASE main
      keyserver: https://packages.microsoft.com/keys/microsoft.asc
      keyid: EB3E94ADBE1229CF
    google-cloud-sdk:
      source: deb [arch=amd64 signed-by=$KEY_FILE] http://packages.cloud.google.com/apt cloud-sdk main
      keyserver: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      keyid: C0BA5CE6DC6315A3
    google-chrome:
      source: deb [arch=amd64 signed-by=$KEY_FILE] http://dl.google.com/linux/chrome/deb/ stable main
      keyserver: https://dl-ssl.google.com/linux/linux_signing_key.pub
      keyid: 7721F63BD38B4796
    speedtest-cli:
      source: deb [arch=amd64 signed-by=$KEY_FILE] https://packagecloud.io/ookla/speedtest-cli/ubuntu/ jammy main
      keyserver: https://packagecloud.io/ookla/speedtest-cli/gpgkey
      keyid: 31EB3981E723ACAA
    docker:
      source: deb [arch=amd64 signed-by=$KEY_FILE] https://download.docker.com/linux/ubuntu noble stable
      keyserver: https://download.docker.com/linux/ubuntu/gpg
      keyid: 8D81803C0EBFCD88

packages:
  - alsa-utils
  - ansible
  - apache2-utils
  - apparmor
  - apt-transport-https
  - asciidoctor
  - autoconf
  - azure-cli
  - bash-completion
  - bat
  - ca-certificates
  - cockpit
  - cmake
  - curl
  - dos2unix
  - dpkg
  - dpkg-dev
  - dnsutils
  - ffmpeg
  - file
  - fontconfig
  - fonts-powerline
  - frei0r-plugins
  - fuse3
  - fzf
  - gh
  - gnupg
  - graphviz
  - gstreamer1.0-plugins-base
  - gstreamer1.0-plugins-good
  - gstreamer1.0-plugins-bad
  - gstreamer1.0-plugins-ugly
  - google-cloud-cli
  - google-chrome-stable
  - imagemagick
  - inkscape
  - iputils-ping
  - ladspa-sdk
  - libapache2-mod-php
  - libavif-dev
  - libfuse3-3
  - libgstreamer1.0-0
  - libappindicator3-1
  - libdbusmenu-glib4
  - libdbusmenu-gtk3-4
  - libfftw3-bin
  - libfftw3-dev
  - libfftw3-long3
  - libfftw3-quad3
  - libfftw3-single3
  - libfuse2t64
  - libgavl2
  - libgl1-mesa-dri
  - libgl1
  - libgif-dev
  - libglu1-mesa
  - libmovit-dev
  - libnotify4
  - libpoppler-cpp-dev
  - libsecret-1-0
  - libsecret-1-dev
  - libsecret-common
  - libsox-fmt-all
  - libglx-mesa0
  - libvulkan1
  - libvidstab-dev
  - libyelp-dev
  - locales
  - locales-all
  - lsb-release
  - lsd
  - melt
  - mesa-utils
  - mesa-utils-bin
  - mesa-vulkan-drivers
  - mtr
  - nmap
  - npm
  - php
  - php-cli
  - php-cgi
  - php-mysql
  - php-pgsql
  - python3-full
  - python3-pip
  - python3-venv
  - skopeo
  - snapd
  - software-properties-common
  - squashfs-tools
  - swh-plugins
  - sox
  - speedtest
  - sqlite3
  - terraform
  - tesseract-ocr
  - tcpdump
  - tofrodos
  - ubuntu-drivers-common
  - unzip
  - vlc
  - xdg-utils
  - yamllint
  - yelp-tools
  - zsh

snap:
  commands:
    02: ['install', 'shfmt']

write_files:
  - path: /root/.tmux.conf
    content: |
      set -g default-terminal "screen-256color"
      set -g @plugin 'khanghh/tmux-dark-plus-theme'
      set -g @plugin 'tmux-plugins/tpm'
      set -g @plugin 'tmux-plugins/tmux-sensible'
      set -g window-active-style 'bg=colour235,fg=colour253'
      set -g window-style 'bg=colour235,fg=colour253'
      set -g pane-border-style 'bg=colour235, fg=colour59'
      set -g pane-active-border-style 'bg=colour235, fg=colour59'
      set -g status-style 'bg=colour32, fg=colour15'
      set -g window-status-style 'bg=default, fg=default'
      set -g window-status-current-style 'bg=colour39, fg=default'
      run '~/.tmux/plugins/tpm/tpm'
  - path: /etc/ssh/sshd_config.d/custom.conf
    content: |
      UsePAM yes
      KbdInteractiveAuthentication yes
      PrintMotd no
  - path: /root/.lacework.toml
    content: |
      [default]
        account = "${VAR_Forticnapp_account}"
        subaccount = "${VAR_Forticnapp_subaccount}"
        api_key = "${VAR_Forticnapp_api_key}"
        api_secret = "${VAR_Forticnapp_api_secret}"
        version = 2
  - path: /etc/skel/.lacework.toml
    content: |
      [default]
        account = "${VAR_Forticnapp_account}"
        subaccount = "${VAR_Forticnapp_subaccount}"
        api_key = "${VAR_Forticnapp_api_key}"
        api_secret = "${VAR_Forticnapp_api_secret}"
        version = 2
  # - path: /tmp/broker.conf.testing
  #   content: |
  #     [oidc]
  #     issuer = "https://login.microsoftonline.com/${VAR_Directory_tenant_ID}/v2.0"
  #     client_id = "${VAR_Directory_client_ID}"
  #     [users]
  #     allowed_users = ALL
  #     ssh_allowed_suffixes = @fortinet-us.com

runcmd:
  - echo "runcmd executed at $(date)"
  - |
    DEV=/dev/disk/azure/scsi1/lun0
    if ! blkid -s TYPE "$DEV" >/dev/null 2>&1; then
      mkfs.ext4 -F "$DEV"
    fi
  - echo '/dev/disk/azure/scsi1/lun0 /home       ext4 defaults,nofail 0 2' >> /etc/fstab
  - 'mountpoint -q /home || mount /dev/disk/azure/scsi1/lun0 /home'
  - '[ -d /var/lib/authd ] || mkdir -p /var/lib/authd'
  - |
    DEV=/dev/disk/azure/scsi1/lun1
    if ! blkid -s TYPE "$DEV" >/dev/null 2>&1; then
      mkfs.ext4 -F "$DEV"
    fi
  - echo '/dev/disk/azure/scsi1/lun1 /var/lib/authd       ext4 defaults,nofail 0 2' >> /etc/fstab
  - 'mountpoint -q /var/lib/authd || mount /dev/disk/azure/scsi1/lun1 /var/lib/authd'
  - 'DEBIAN_FRONTEND=noninteractive apt-get install -y authd'
  - snap install authd-msentraid
  - |
    sed -i \
    -e 's|issuer = https://login.microsoftonline.com/<ISSUER_ID>/v2.0|issuer = "https://login.microsoftonline.com/${VAR_Directory_tenant_ID}/v2.0"|' \
    -e 's|client_id = <CLIENT_ID>|client_id = "${VAR_Directory_client_ID}"|' \
    /var/snap/authd-msentraid/current/broker.conf
  - sed -i 's/^#allowed_users = OWNER$/allowed_users = ALL/' /var/snap/authd-msentraid/current/broker.conf
  - echo 'ssh_allowed_suffixes = @fortinet-us.com' >> /var/snap/authd-msentraid/current/broker.conf
  - sed -i 's/^\(LOGIN_TIMEOUT\t\t\)[0-9]\+/\1360/' /etc/login.defs
  - mkdir -p /etc/authd/brokers.d/
  - cp /snap/authd-msentraid/current/conf/authd/msentraid.conf /etc/authd/brokers.d/msentraid.conf
  - snap restart authd-msentraid
  - |
    mkdir -p /etc/systemd/system/authd.socket.d
    cat <<EOF >/etc/systemd/system/authd.socket.d/override.conf
    [Install]
    WantedBy=multi-user.target
    EOF
  - systemctl daemon-reload
  - systemctl enable --now authd.socket
  - systemctl restart authd
  - systemctl restart ssh
  - |
    LACEWORK_VERSION=$$(curl -s "https://api.github.com/repos/lacework/extensible-reporting/releases/latest" | grep -Po '"tag_name": "v\K[^"]*')
    curl -L -o lw_report_gen "https://github.com/lacework/extensible-reporting/releases/download/v$${LACEWORK_VERSION}/lw_report_gen_linux_x86_64"
    install lw_report_gen /usr/local/bin
    rm lw_report_gen
  - useradd -D -s "$(which zsh)"
  - sed -i -E 's|^#?DSHELL=.*|DSHELL=/usr/bin/zsh|' /etc/adduser.conf
  - [ sh, -xc, "echo 'ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true' | debconf-set-selections" ]
  - [ sh, -xc, "DEBIAN_FRONTEND=noninteractive apt-get update -qq" ]
  - [ sh, -xc, "DEBIAN_FRONTEND=noninteractive apt-get install -y ttf-mscorefonts-installer ubuntu-restricted-extras" ]
