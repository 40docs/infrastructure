[K| Loading component catalog... [K{
  "assessedFromCodesecBot": false,
  "assessmentDirectory": ".",
  "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
  "completedAt": "2025-07-31T15:48:34.104Z",
  "detectedIacLanguages": [
    "terraform"
  ],
  "evalGuid": "",
  "findings": [
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [],
      "description": "-",
      "evalGuid": "",
      "fileName": "spoke-network.tf",
      "filePath": "spoke-network.tf",
      "findingGuid": "f-fffa4b2a9014c96c9e485234a227db4964eaba7cb1e079d23b7ebfe8b9c72f07",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-network.tf#L132..L132",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 132,
      "lineRangeEnd": 132,
      "longId": "azure-network-no-public-egress",
      "markdown": "Security group rule allows egress to public internet.\n\n#### Resource\nazurerm_network_security_group.spoke_network_security_group\n\n#### File\n[spoke-network.tf : Line 132](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-network.tf#L132..L132)\n\n",
      "partialFingerprint": "9ed44f7b80efc19f:1",
      "pass": false,
      "policyId": "tfsec-azu002",
      "repoPath": "spoke-network.tf",
      "resource": "azurerm_network_security_group.spoke_network_security_group",
      "ruleId": "AVD-AZU-0051",
      "severity": "Critical",
      "title": "An outbound network security rule allows traffic to `/0`"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": null,
      "description": "Network security rules should not use very broad subnets. Where possible, segements should be broken into smaller subnets.",
      "evalGuid": "",
      "fileName": "hub-network.tf",
      "filePath": "hub-network.tf",
      "findingGuid": "f-9f3b9c3d15d75d82404b76606464b0f4bc9d55e0010ba69957e7308eeecd0711",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L103..L103",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 103,
      "lineRangeEnd": 103,
      "markdown": "Network security rules should not use very broad subnets. Where possible, segements should be broken into smaller subnets.\n\n#### Resource\nazurerm_network_security_group.hub_external_network_security_group\n\n#### File\n[hub-network.tf : Line 103](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L103..L103)\n\n",
      "partialFingerprint": "a2c73677a00d8eb1:1",
      "pass": false,
      "policyId": "lacework-iac-azure-network-1",
      "repoPath": "hub-network.tf",
      "resource": "azurerm_network_security_group.hub_external_network_security_group",
      "ruleId": "",
      "severity": "Critical",
      "title": "An inbound network security rule allows traffic from `/0`"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "HIPAA",
        "CIS"
      ],
      "description": "Enable sensitive data encryption at rest using Customer Managed Keys rather than Microsoft Managed keys.",
      "evalGuid": "",
      "fileName": "cloudshell.tf",
      "filePath": "cloudshell.tf",
      "findingGuid": "f-46e5afc806c00f286e5e9f5c8bb1f6f6ecefa141146f1028ce52615d0466579f",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/cloudshell.tf#L152..L164",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 152,
      "lineRangeEnd": 164,
      "markdown": "Ensure storage for critical data are encrypted with Customer Managed Key\n\n#### Resource\nazurerm_storage_account.cloudshell_storage_account\n\n#### File\n[cloudshell.tf : Lines 152 - 164](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/cloudshell.tf#L152..L164)\n\n#### Code\n```\n152: resource \"azurerm_storage_account\" \"cloudshell_storage_account\" {\n\n153:   count                    = var.cloudshell ? 1 : 0\n\n154:   name                     = \"cldshl${random_id.random_id[count.index].hex}\"\n\n155:   location                 = azurerm_resource_group.azure_resource_group.location\n\n156:   resource_group_name      = azurerm_resource_group.azure_resource_group.name\n\n157:   account_tier             = \"Standard\"\n\n158:   account_replication_type = \"LRS\"\n\n159: \n\n160:   # Enable infrastructure encryption for enhanced security\n\n161:   infrastructure_encryption_enabled = true\n\n162: \n\n163:   tags = local.standard_tags\n\n164: }\n\n```\n\n",
      "partialFingerprint": "917ec4d0683a4dd8:1",
      "pass": false,
      "policyId": "ckv2-azure-1",
      "repoPath": "cloudshell.tf",
      "resource": "azurerm_storage_account.cloudshell_storage_account",
      "ruleId": "CKV2_AZURE_1",
      "severity": "High",
      "title": "Ensure storage for critical data are encrypted with Customer Managed Key"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [],
      "description": "-",
      "evalGuid": "",
      "fileName": "spoke-k8s_cluster.tf",
      "filePath": "spoke-k8s_cluster.tf",
      "findingGuid": "f-cd30a91ea28375d246fcbd9664f137285d2b2c0c64ee739bc82f9f4839a463cd",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L175",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 101,
      "lineRangeEnd": 175,
      "longId": "azure-container-limit-authorized-ips",
      "markdown": "Cluster does not limit API access to specific IP addresses.\n\n#### Resource\nazurerm_kubernetes_cluster.kubernetes_cluster\n\n#### File\n[spoke-k8s_cluster.tf : Lines 101 - 175](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L175)\n\n",
      "partialFingerprint": "005b92233789cc3e:1",
      "pass": false,
      "policyId": "tfsec-azu008",
      "repoPath": "spoke-k8s_cluster.tf",
      "resource": "azurerm_kubernetes_cluster.kubernetes_cluster",
      "ruleId": "AVD-AZU-0041",
      "severity": "High",
      "title": "Ensure AKS has an API Server Authorized IP Ranges enabled"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [],
      "description": "Ensure that AKS enables private clusters",
      "evalGuid": "",
      "fileName": "spoke-k8s_cluster.tf",
      "filePath": "spoke-k8s_cluster.tf",
      "findingGuid": "f-72276ce4d8a642a73f908ac6a499c6a0a5c13666d485040ba212f7b9afd78094",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L175",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 101,
      "lineRangeEnd": 175,
      "markdown": "Ensure that AKS enables private clusters\n\n#### Resource\nazurerm_kubernetes_cluster.kubernetes_cluster\n\n#### File\n[spoke-k8s_cluster.tf : Lines 101 - 175](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L175)\n\n#### Code\n```\n101: resource \"azurerm_kubernetes_cluster\" \"kubernetes_cluster\" {\n\n102:   depends_on = [\n\n103:     azurerm_virtual_network_peering.spoke_to_hub_virtual_network_peering,\n\n104:     azurerm_linux_virtual_machine.hub-nva_virtual_machine\n\n105:   ]\n\n106: \n\n107:   name                              = local.cluster_name\n\n108:   location                          = azurerm_resource_group.azure_resource_group.location\n\n109:   resource_group_name               = azurerm_resource_group.azure_resource_group.name\n\n110:   dns_prefix                        = azurerm_resource_group.azure_resource_group.name\n\n111:   sku_tier                          = var.production_environment ? \"Standard\" : \"Free\"\n\n112:   cost_analysis_enabled             = var.production_environment ? true : false\n\n113:   support_plan                      = \"KubernetesOfficial\"\n\n114:   kubernetes_version                = \"1.31.8\"\n\n115:   node_resource_group               = local.node_resource_group\n\n116:   role_based_access_control_enabled = true\n\n117:   oidc_issuer_enabled               = true\n\n118:   workload_identity_enabled         = true\n\n119: \n\n120:   # OMS agent for monitoring integration\n\n121:   oms_agent {\n\n122:     log_analytics_workspace_id      = azurerm_log_analytics_workspace.log_analytics.id\n\n123:     msi_auth_for_monitoring_enabled = true\n\n124:   }\n\n125: \n\n126:   # API Server access profile for security\n\n127:   api_server_access_profile {\n\n128:     authorized_ip_ranges = var.production_environment ? [\"10.0.0.0/16\", \"172.16.0.0/12\", \"192.168.0.0/16\"] : []\n\n129:   }\n\n130: \n\n131:   # Azure Policy Add-on for governance\n\n132:   azure_policy_enabled = var.production_environment ? true : false\n\n133: \n\n134:   # Default node pool configuration\n\n135:   default_node_pool {\n\n136:     temporary_name_for_rotation  = \"rotation\"\n\n137:     name                         = \"system\"\n\n138:     auto_scaling_enabled         = var.production_environment\n\n139:     node_count                   = var.production_environment ? 3 : 1\n\n140:     min_count                    = var.production_environment ? 3 : null\n\n141:     max_count                    = var.production_environment ? 7 : null\n\n142:     vm_size                      = var.production_environment ? local.vm_image[\"aks\"].size : local.vm_image[\"aks\"].size-dev\n\n143:     os_sku                       = \"AzureLinux\"\n\n144:     max_pods                     = \"75\"\n\n145:     orchestrator_version         = \"1.30.6\"\n\n146:     vnet_subnet_id               = azurerm_subnet.spoke_subnet.id\n\n147:     only_critical_addons_enabled = var.production_environment ? true : false\n\n148:     os_disk_type                 = \"Managed\"\n\n149:     os_disk_size_gb              = 128\n\n150: \n\n151:     upgrade_settings {\n\n152:       max_surge = var.production_environment ? 10 : 1\n\n153:     }\n\n154: \n\n155:     node_labels = {\n\n156:       \"system-pool\" = \"true\"\n\n157:       \"user-pool\"   = var.production_environment ? false : true\n\n158:     }\n\n159:   }\n\n160: \n\n161:   # Network profile configuration\n\n162:   network_profile {\n\n163:     network_plugin    = \"kubenet\"\n\n164:     network_policy    = \"calico\"\n\n165:     load_balancer_sku = \"standard\"\n\n166:     pod_cidr          = var.spoke-aks_pod_cidr\n\n167:   }\n\n168: \n\n169:   # System-assigned managed identity\n\n170:   identity {\n\n171:     type = \"SystemAssigned\"\n\n172:   }\n\n173: \n\n174:   tags = local.standard_tags\n\n175: }\n\n```\n\n",
      "partialFingerprint": "005b92233789cc3e:1",
      "pass": false,
      "policyId": "ckv-azure-115",
      "repoPath": "spoke-k8s_cluster.tf",
      "resource": "azurerm_kubernetes_cluster.kubernetes_cluster",
      "ruleId": "CKV_AZURE_115",
      "severity": "Medium",
      "title": "Ensure that AKS enables private clusters"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [],
      "description": "Ensure that AKS uses disk encryption set",
      "evalGuid": "",
      "fileName": "spoke-k8s_cluster.tf",
      "filePath": "spoke-k8s_cluster.tf",
      "findingGuid": "f-e030808ca8c58e583cdffdc3a0f358e54054d3237af8bfd34ef28be5871d99c2",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L175",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 101,
      "lineRangeEnd": 175,
      "markdown": "Ensure that AKS uses disk encryption set\n\n#### Resource\nazurerm_kubernetes_cluster.kubernetes_cluster\n\n#### File\n[spoke-k8s_cluster.tf : Lines 101 - 175](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L175)\n\n#### Code\n```\n101: resource \"azurerm_kubernetes_cluster\" \"kubernetes_cluster\" {\n\n102:   depends_on = [\n\n103:     azurerm_virtual_network_peering.spoke_to_hub_virtual_network_peering,\n\n104:     azurerm_linux_virtual_machine.hub-nva_virtual_machine\n\n105:   ]\n\n106: \n\n107:   name                              = local.cluster_name\n\n108:   location                          = azurerm_resource_group.azure_resource_group.location\n\n109:   resource_group_name               = azurerm_resource_group.azure_resource_group.name\n\n110:   dns_prefix                        = azurerm_resource_group.azure_resource_group.name\n\n111:   sku_tier                          = var.production_environment ? \"Standard\" : \"Free\"\n\n112:   cost_analysis_enabled             = var.production_environment ? true : false\n\n113:   support_plan                      = \"KubernetesOfficial\"\n\n114:   kubernetes_version                = \"1.31.8\"\n\n115:   node_resource_group               = local.node_resource_group\n\n116:   role_based_access_control_enabled = true\n\n117:   oidc_issuer_enabled               = true\n\n118:   workload_identity_enabled         = true\n\n119: \n\n120:   # OMS agent for monitoring integration\n\n121:   oms_agent {\n\n122:     log_analytics_workspace_id      = azurerm_log_analytics_workspace.log_analytics.id\n\n123:     msi_auth_for_monitoring_enabled = true\n\n124:   }\n\n125: \n\n126:   # API Server access profile for security\n\n127:   api_server_access_profile {\n\n128:     authorized_ip_ranges = var.production_environment ? [\"10.0.0.0/16\", \"172.16.0.0/12\", \"192.168.0.0/16\"] : []\n\n129:   }\n\n130: \n\n131:   # Azure Policy Add-on for governance\n\n132:   azure_policy_enabled = var.production_environment ? true : false\n\n133: \n\n134:   # Default node pool configuration\n\n135:   default_node_pool {\n\n136:     temporary_name_for_rotation  = \"rotation\"\n\n137:     name                         = \"system\"\n\n138:     auto_scaling_enabled         = var.production_environment\n\n139:     node_count                   = var.production_environment ? 3 : 1\n\n140:     min_count                    = var.production_environment ? 3 : null\n\n141:     max_count                    = var.production_environment ? 7 : null\n\n142:     vm_size                      = var.production_environment ? local.vm_image[\"aks\"].size : local.vm_image[\"aks\"].size-dev\n\n143:     os_sku                       = \"AzureLinux\"\n\n144:     max_pods                     = \"75\"\n\n145:     orchestrator_version         = \"1.30.6\"\n\n146:     vnet_subnet_id               = azurerm_subnet.spoke_subnet.id\n\n147:     only_critical_addons_enabled = var.production_environment ? true : false\n\n148:     os_disk_type                 = \"Managed\"\n\n149:     os_disk_size_gb              = 128\n\n150: \n\n151:     upgrade_settings {\n\n152:       max_surge = var.production_environment ? 10 : 1\n\n153:     }\n\n154: \n\n155:     node_labels = {\n\n156:       \"system-pool\" = \"true\"\n\n157:       \"user-pool\"   = var.production_environment ? false : true\n\n158:     }\n\n159:   }\n\n160: \n\n161:   # Network profile configuration\n\n162:   network_profile {\n\n163:     network_plugin    = \"kubenet\"\n\n164:     network_policy    = \"calico\"\n\n165:     load_balancer_sku = \"standard\"\n\n166:     pod_cidr          = var.spoke-aks_pod_cidr\n\n167:   }\n\n168: \n\n169:   # System-assigned managed identity\n\n170:   identity {\n\n171:     type = \"SystemAssigned\"\n\n172:   }\n\n173: \n\n174:   tags = local.standard_tags\n\n175: }\n\n```\n\n",
      "partialFingerprint": "005b92233789cc3e:1",
      "pass": false,
      "policyId": "ckv-azure-117",
      "repoPath": "spoke-k8s_cluster.tf",
      "resource": "azurerm_kubernetes_cluster.kubernetes_cluster",
      "ruleId": "CKV_AZURE_117",
      "severity": "Medium",
      "title": "Ensure that AKS uses disk encryption set"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [],
      "description": "Ensure that Network Interfaces don't use public IPs",
      "evalGuid": "",
      "fileName": "cloudshell.tf",
      "filePath": "cloudshell.tf",
      "findingGuid": "f-d083fd1b9b12314930271b93c6d5dc962a145e7efefec3e78e27dd899d179021",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/cloudshell.tf#L125..L136",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 125,
      "lineRangeEnd": 136,
      "markdown": "Ensure that Network Interfaces don't use public IPs\n\n#### Resource\nazurerm_network_interface.cloudshell_nic\n\n#### File\n[cloudshell.tf : Lines 125 - 136](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/cloudshell.tf#L125..L136)\n\n#### Code\n```\n125: resource \"azurerm_network_interface\" \"cloudshell_nic\" {\n\n126:   count               = var.cloudshell ? 1 : 0\n\n127:   name                = \"cloudshell-NIC\"\n\n128:   location            = azurerm_resource_group.azure_resource_group.location\n\n129:   resource_group_name = azurerm_resource_group.azure_resource_group.name\n\n130:   ip_configuration {\n\n131:     name                          = \"cloudshell_nic_configuration\"\n\n132:     subnet_id                     = azurerm_subnet.cloudshell[count.index].id\n\n133:     private_ip_address_allocation = \"Dynamic\"\n\n134:     public_ip_address_id          = azurerm_public_ip.cloudshell_public_ip[count.index].id\n\n135:   }\n\n136: }\n\n```\n\n",
      "partialFingerprint": "140c1e7e56791f3e:1",
      "pass": false,
      "policyId": "ckv-azure-119",
      "repoPath": "cloudshell.tf",
      "resource": "azurerm_network_interface.cloudshell_nic",
      "ruleId": "CKV_AZURE_119",
      "severity": "Medium",
      "title": "Ensure that Network Interfaces don't use public IPs"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": null,
      "description": "Network security rules should not use very broad subnets. Where possible, segements should be broken into smaller subnets.",
      "evalGuid": "",
      "fileName": "spoke-network.tf",
      "filePath": "spoke-network.tf",
      "findingGuid": "f-d3c3e4a0cf3d5c4f41b6659b72bdf63de438f71ac37e177a8cb1b1371bbcd6da",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-network.tf#L91..L91",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 91,
      "lineRangeEnd": 91,
      "markdown": "Network security rules should not use very broad subnets. Where possible, segements should be broken into smaller subnets.\n\n#### Resource\nazurerm_network_security_group.spoke_network_security_group\n\n#### File\n[spoke-network.tf : Line 91](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-network.tf#L91..L91)\n\n",
      "partialFingerprint": "c51dd7a3cac001a7:1",
      "pass": true,
      "policyId": "lacework-iac-azure-network-1",
      "repoPath": "spoke-network.tf",
      "resource": "azurerm_network_security_group.spoke_network_security_group",
      "ruleId": "",
      "severity": "Critical",
      "title": "An inbound network security rule allows traffic from `/0`"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS"
      ],
      "description": "Ensure that SSH access is restricted from the internet",
      "evalGuid": "",
      "fileName": "hub-network.tf",
      "filePath": "hub-network.tf",
      "findingGuid": "f-911d1fcdfb1550b43de082e8bce2ec7b53ce08e6e0c0b7d5fcda19c7b32ce52a",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L103..L187",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 103,
      "lineRangeEnd": 187,
      "markdown": "Ensure that SSH access is restricted from the internet\n\n#### Resource\nazurerm_network_security_group.hub_external_network_security_group\n\n#### File\n[hub-network.tf : Lines 103 - 187](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L103..L187)\n\n#### Code\n```\n103: resource \"azurerm_network_security_group\" \"hub_external_network_security_group\" { #tfsec:ignore:azure-network-no-public-ingress\n\n104:   name                = \"hub-external_network_security_group\"\n\n105:   location            = azurerm_resource_group.azure_resource_group.location\n\n106:   resource_group_name = azurerm_resource_group.azure_resource_group.name\n\n107: \n\n108:   # Management access rule for NVA (restricted to management network)\n\n109:   security_rule {\n\n110:     name                       = \"MGMT_rule\"\n\n111:     priority                   = 100\n\n112:     direction                  = \"Inbound\"\n\n113:     access                     = \"Allow\"\n\n114:     protocol                   = \"Tcp\"\n\n115:     source_port_range          = \"*\"\n\n116:     destination_port_range     = local.vm_image[var.hub-nva-image].management-port\n\n117:     source_address_prefixes    = [\"10.0.0.0/16\", \"172.16.0.0/12\", \"192.168.0.0/16\"]\n\n118:     destination_address_prefix = var.hub-nva-management-ip\n\n119:   }\n\n120: \n\n121:   # Virtual IP rule for docs application (public access required)\n\n122:   security_rule {\n\n123:     name                       = \"VIP_rule-docs\"\n\n124:     priority                   = 101\n\n125:     direction                  = \"Inbound\"\n\n126:     access                     = \"Allow\"\n\n127:     protocol                   = \"Tcp\"\n\n128:     source_port_range          = \"*\"\n\n129:     destination_port_ranges    = [\"80\", \"443\"] #checkov:skip=CKV_AZURE_160: Allow HTTP redirects\n\n130:     source_address_prefix      = \"Internet\"\n\n131:     destination_address_prefix = var.hub-nva-vip-docs\n\n132:   }\n\n133: \n\n134:   # Virtual IP rule for DVWA application\n\n135:   security_rule {\n\n136:     name                       = \"VIP_rule-dvwa\"\n\n137:     priority                   = 102\n\n138:     direction                  = \"Inbound\"\n\n139:     access                     = \"Allow\"\n\n140:     protocol                   = \"Tcp\"\n\n141:     source_port_range          = \"*\"\n\n142:     destination_port_ranges    = [\"80\", \"443\"] #checkov:skip=CKV_AZURE_160: Allow HTTP redirects\n\n143:     source_address_prefix      = \"*\"\n\n144:     destination_address_prefix = var.hub-nva-vip-dvwa\n\n145:   }\n\n146: \n\n147:   # Virtual IP rule for Ollama application\n\n148:   security_rule {\n\n149:     name                       = \"VIP_rule-ollama\"\n\n150:     priority                   = 103\n\n151:     direction                  = \"Inbound\"\n\n152:     access                     = \"Allow\"\n\n153:     protocol                   = \"Tcp\"\n\n154:     source_port_range          = \"*\"\n\n155:     destination_port_ranges    = [\"80\", \"443\"] #checkov:skip=CKV_AZURE_160: Allow HTTP redirects\n\n156:     source_address_prefix      = \"*\"\n\n157:     destination_address_prefix = var.hub-nva-vip-ollama\n\n158:   }\n\n159: \n\n160:   # Virtual IP rule for video application\n\n161:   security_rule {\n\n162:     name                       = \"VIP_rule-video\"\n\n163:     priority                   = 104\n\n164:     direction                  = \"Inbound\"\n\n165:     access                     = \"Allow\"\n\n166:     protocol                   = \"Tcp\"\n\n167:     source_port_range          = \"*\"\n\n168:     destination_port_ranges    = [\"80\", \"443\"] #checkov:skip=CKV_AZURE_160: Allow HTTP redirects\n\n169:     source_address_prefix      = \"*\"\n\n170:     destination_address_prefix = var.hub-nva-vip-video\n\n171:   }\n\n172: \n\n173:   # Virtual IP rule for extractor application\n\n174:   security_rule {\n\n175:     name                       = \"VIP_rule-extractor\"\n\n176:     priority                   = 105\n\n177:     direction                  = \"Inbound\"\n\n178:     access                     = \"Allow\"\n\n179:     protocol                   = \"Tcp\"\n\n180:     source_port_range          = \"*\"\n\n181:     destination_port_ranges    = [\"80\", \"443\"] #checkov:skip=CKV_AZURE_160: Allow HTTP redirects\n\n182:     source_address_prefix      = \"*\"\n\n183:     destination_address_prefix = var.hub-nva-vip-extractor\n\n184:   }\n\n185: \n\n186:   tags = local.standard_tags\n\n187: }\n\n```\n\n",
      "partialFingerprint": "a2c73677a00d8eb1:1",
      "pass": true,
      "policyId": "ckv-azure-10",
      "repoPath": "hub-network.tf",
      "resource": "azurerm_network_security_group.hub_external_network_security_group",
      "ruleId": "CKV_AZURE_10",
      "severity": "Critical",
      "title": "Ensure that SSH access is restricted from the internet"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": null,
      "description": "Network security rules should not use very broad subnets. Where possible, segements should be broken into smaller subnets.",
      "evalGuid": "",
      "fileName": "hub-network.tf",
      "filePath": "hub-network.tf",
      "findingGuid": "f-7435da212e3d399210dd49fa47a98acf671a356b50d2639883a856ed9e35e13d",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L197..L197",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 197,
      "lineRangeEnd": 197,
      "markdown": "Network security rules should not use very broad subnets. Where possible, segements should be broken into smaller subnets.\n\n#### Resource\nazurerm_network_security_group.hub_internal_network_security_group\n\n#### File\n[hub-network.tf : Line 197](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L197..L197)\n\n",
      "partialFingerprint": "e8b66372ca54f7ad:1",
      "pass": true,
      "policyId": "lacework-iac-azure-network-1",
      "repoPath": "hub-network.tf",
      "resource": "azurerm_network_security_group.hub_internal_network_security_group",
      "ruleId": "",
      "severity": "Critical",
      "title": "An inbound network security rule allows traffic from `/0`"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [],
      "description": "-",
      "evalGuid": "",
      "fileName": "hub-network.tf",
      "filePath": "hub-network.tf",
      "findingGuid": "f-b8b4a1510fb9a968b9bd6389a0be87f23a9d1d36dd2cd98839af0c536b589530",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L197..L242",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 197,
      "lineRangeEnd": 242,
      "longId": "azure-network-ssh-blocked-from-internet",
      "markdown": "\n\n#### Resource\nazurerm_network_security_group.hub_internal_network_security_group\n\n#### File\n[hub-network.tf : Lines 197 - 242](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L197..L242)\n\n",
      "partialFingerprint": "e8b66372ca54f7ad:1",
      "pass": true,
      "policyId": "tfsec-azu017",
      "repoPath": "hub-network.tf",
      "resource": "azurerm_network_security_group.hub_internal_network_security_group",
      "ruleId": "AVD-AZU-0050",
      "severity": "Critical",
      "title": "SSH access should not be accessible from the Internet, should be blocked on port 22"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [],
      "description": "-",
      "evalGuid": "",
      "fileName": "spoke-network.tf",
      "filePath": "spoke-network.tf",
      "findingGuid": "f-52c620486d8a1b87ada4cf7b7c26a0d5e294ef371e43e34594b4f6d531ce3109",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-network.tf#L91..L136",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 91,
      "lineRangeEnd": 136,
      "longId": "azure-network-ssh-blocked-from-internet",
      "markdown": "\n\n#### Resource\nazurerm_network_security_group.spoke_network_security_group\n\n#### File\n[spoke-network.tf : Lines 91 - 136](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-network.tf#L91..L136)\n\n",
      "partialFingerprint": "c51dd7a3cac001a7:1",
      "pass": true,
      "policyId": "tfsec-azu017",
      "repoPath": "spoke-network.tf",
      "resource": "azurerm_network_security_group.spoke_network_security_group",
      "ruleId": "AVD-AZU-0050",
      "severity": "Critical",
      "title": "SSH access should not be accessible from the Internet, should be blocked on port 22"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [],
      "description": "-",
      "evalGuid": "",
      "fileName": "hub-network.tf",
      "filePath": "hub-network.tf",
      "findingGuid": "f-bb3cea2e514014711172037a23b78cf35bf06981203e1798e33a70b536cf8c90",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L103..L187",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 103,
      "lineRangeEnd": 187,
      "longId": "azure-network-no-public-egress",
      "markdown": "\n\n#### Resource\nazurerm_network_security_group.hub_external_network_security_group\n\n#### File\n[hub-network.tf : Lines 103 - 187](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L103..L187)\n\n",
      "partialFingerprint": "a2c73677a00d8eb1:1",
      "pass": true,
      "policyId": "tfsec-azu002",
      "repoPath": "hub-network.tf",
      "resource": "azurerm_network_security_group.hub_external_network_security_group",
      "ruleId": "AVD-AZU-0051",
      "severity": "Critical",
      "title": "An outbound network security rule allows traffic to `/0`"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [],
      "description": "-",
      "evalGuid": "",
      "fileName": "hub-network.tf",
      "filePath": "hub-network.tf",
      "findingGuid": "f-7c1079bead167eb25027e64452e9a8c51bc6163dd47713f0a48a70066746099d",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L197..L242",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 197,
      "lineRangeEnd": 242,
      "longId": "azure-network-no-public-egress",
      "markdown": "\n\n#### Resource\nazurerm_network_security_group.hub_internal_network_security_group\n\n#### File\n[hub-network.tf : Lines 197 - 242](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L197..L242)\n\n",
      "partialFingerprint": "e8b66372ca54f7ad:1",
      "pass": true,
      "policyId": "tfsec-azu002",
      "repoPath": "hub-network.tf",
      "resource": "azurerm_network_security_group.hub_internal_network_security_group",
      "ruleId": "AVD-AZU-0051",
      "severity": "Critical",
      "title": "An outbound network security rule allows traffic to `/0`"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS"
      ],
      "description": "Ensure that SSH access is restricted from the internet",
      "evalGuid": "",
      "fileName": "spoke-network.tf",
      "filePath": "spoke-network.tf",
      "findingGuid": "f-dfea84645d37d90ee1f72de3b0010e0d5823b16bda1078215c8d54e9596789b2",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-network.tf#L91..L136",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 91,
      "lineRangeEnd": 136,
      "markdown": "Ensure that SSH access is restricted from the internet\n\n#### Resource\nazurerm_network_security_group.spoke_network_security_group\n\n#### File\n[spoke-network.tf : Lines 91 - 136](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-network.tf#L91..L136)\n\n#### Code\n```\n91:  resource \"azurerm_network_security_group\" \"spoke_network_security_group\" {\n\n92:    name                = \"spoke_network_security_group\"\n\n93:    location            = azurerm_resource_group.azure_resource_group.location\n\n94:    resource_group_name = azurerm_resource_group.azure_resource_group.name\n\n95:  \n\n96:    # Allow inbound HTTP traffic for applications (restricted to known sources)\n\n97:    security_rule { #tfsec:ignore:AVD-AZU-0047\n\n98:      name                       = \"inbound-http_rule\"\n\n99:      priority                   = 100\n\n100:     direction                  = \"Inbound\"\n\n101:     access                     = \"Allow\"\n\n102:     protocol                   = \"Tcp\"\n\n103:     source_port_range          = \"*\"\n\n104:     destination_port_ranges    = [\"80\", \"443\", \"8080\", \"8000\"]\n\n105:     source_address_prefixes    = [\"10.0.0.0/16\", \"172.16.0.0/12\", \"192.168.0.0/16\"]\n\n106:     destination_address_prefix = \"*\"\n\n107:   }\n\n108: \n\n109:   # Allow AKS nodes to access internet for updates\n\n110:   security_rule {\n\n111:     name                       = \"aks-node_to_internet_rule\"\n\n112:     priority                   = 100\n\n113:     direction                  = \"Outbound\"\n\n114:     access                     = \"Allow\"\n\n115:     protocol                   = \"Tcp\"\n\n116:     source_port_range          = \"*\"\n\n117:     destination_port_ranges    = [\"80\", \"443\"]\n\n118:     source_address_prefix      = \"10.0.0.0/16\"\n\n119:     destination_address_prefix = \"Internet\"\n\n120:   }\n\n121: \n\n122:   # Allow ICMP for connectivity testing (restricted to specific destinations)\n\n123:   security_rule {\n\n124:     name                         = \"icmp_to_dns_rule\"\n\n125:     priority                     = 101\n\n126:     direction                    = \"Outbound\"\n\n127:     access                       = \"Allow\"\n\n128:     protocol                     = \"Icmp\"\n\n129:     source_port_range            = \"*\"\n\n130:     destination_port_range       = \"*\"\n\n131:     source_address_prefix        = \"10.0.0.0/16\"\n\n132:     destination_address_prefixes = [\"8.8.8.8/32\", \"8.8.4.4/32\", \"1.1.1.1/32\"]\n\n133:   }\n\n134: \n\n135:   tags = local.standard_tags\n\n136: }\n\n```\n\n",
      "partialFingerprint": "c51dd7a3cac001a7:1",
      "pass": true,
      "policyId": "ckv-azure-10",
      "repoPath": "spoke-network.tf",
      "resource": "azurerm_network_security_group.spoke_network_security_group",
      "ruleId": "CKV_AZURE_10",
      "severity": "Critical",
      "title": "Ensure that SSH access is restricted from the internet"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS"
      ],
      "description": "Ensure that SSH access is restricted from the internet",
      "evalGuid": "",
      "fileName": "hub-network.tf",
      "filePath": "hub-network.tf",
      "findingGuid": "f-5d86e9ef419ef7524c2f56bfc653fe4c33e65b71540e34cb6ea86e1d3c4bd869",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L197..L242",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 197,
      "lineRangeEnd": 242,
      "markdown": "Ensure that SSH access is restricted from the internet\n\n#### Resource\nazurerm_network_security_group.hub_internal_network_security_group\n\n#### File\n[hub-network.tf : Lines 197 - 242](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L197..L242)\n\n#### Code\n```\n197: resource \"azurerm_network_security_group\" \"hub_internal_network_security_group\" {\n\n198:   name                = \"hub-internal_network_security_group\"\n\n199:   location            = azurerm_resource_group.azure_resource_group.location\n\n200:   resource_group_name = azurerm_resource_group.azure_resource_group.name\n\n201: \n\n202:   # Allow AKS node internet access for updates and container pulls\n\n203:   security_rule {\n\n204:     name                       = \"aks-node_to_internet_rule\"\n\n205:     priority                   = 100\n\n206:     direction                  = \"Inbound\"\n\n207:     access                     = \"Allow\"\n\n208:     protocol                   = \"Tcp\"\n\n209:     source_port_range          = \"*\"\n\n210:     destination_port_ranges    = [\"80\", \"443\"]\n\n211:     source_address_prefix      = \"10.0.0.0/8\"\n\n212:     destination_address_prefix = \"*\"\n\n213:   }\n\n214: \n\n215:   # Allow ICMP for connectivity testing (restricted sources and destinations)\n\n216:   security_rule {\n\n217:     name                         = \"icmp_to_dns_rule\"\n\n218:     priority                     = 101\n\n219:     direction                    = \"Inbound\"\n\n220:     access                       = \"Allow\"\n\n221:     protocol                     = \"Icmp\"\n\n222:     source_port_range            = \"*\"\n\n223:     destination_port_range       = \"*\"\n\n224:     source_address_prefix        = \"10.0.0.0/16\"\n\n225:     destination_address_prefixes = [\"8.8.8.8/32\", \"8.8.4.4/32\", \"1.1.1.1/32\"]\n\n226:   }\n\n227: \n\n228:   # Allow outbound HTTP traffic for applications (restricted to internal sources)\n\n229:   security_rule {\n\n230:     name                       = \"outbound-http_rule\"\n\n231:     priority                   = 102\n\n232:     direction                  = \"Outbound\"\n\n233:     access                     = \"Allow\"\n\n234:     protocol                   = \"Tcp\"\n\n235:     source_port_range          = \"*\"\n\n236:     destination_port_ranges    = [\"8000\", \"8080\", \"11434\"]\n\n237:     source_address_prefix      = \"10.0.0.0/16\"\n\n238:     destination_address_prefix = \"Internet\"\n\n239:   }\n\n240: \n\n241:   tags = local.standard_tags\n\n242: }\n\n```\n\n",
      "partialFingerprint": "e8b66372ca54f7ad:1",
      "pass": true,
      "policyId": "ckv-azure-10",
      "repoPath": "hub-network.tf",
      "resource": "azurerm_network_security_group.hub_internal_network_security_group",
      "ruleId": "CKV_AZURE_10",
      "severity": "Critical",
      "title": "Ensure that SSH access is restricted from the internet"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [],
      "description": "-",
      "evalGuid": "",
      "fileName": "hub-network.tf",
      "filePath": "hub-network.tf",
      "findingGuid": "f-b7553b39887d35e06d9880552da638b70b42e6dadd7ffed51bb2deb2589572df",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L103..L187",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 103,
      "lineRangeEnd": 187,
      "longId": "azure-network-ssh-blocked-from-internet",
      "markdown": "\n\n#### Resource\nazurerm_network_security_group.hub_external_network_security_group\n\n#### File\n[hub-network.tf : Lines 103 - 187](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L103..L187)\n\n",
      "partialFingerprint": "a2c73677a00d8eb1:1",
      "pass": true,
      "policyId": "tfsec-azu017",
      "repoPath": "hub-network.tf",
      "resource": "azurerm_network_security_group.hub_external_network_security_group",
      "ruleId": "AVD-AZU-0050",
      "severity": "Critical",
      "title": "SSH access should not be accessible from the Internet, should be blocked on port 22"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS",
        "HIPAA"
      ],
      "description": "Disable RDP access on network security groups (NSG) from the Internet. Azure NSG do not allow access to everyone (0.0.0.0/0) on TCP 3389 in order to protect from security attacks. TCP port 3389 is used for remote GUI login to Microsoft VMs by connecting a Remote Desktop Protocol (RDP) client application with an RDP server.",
      "evalGuid": "",
      "fileName": "hub-network.tf",
      "filePath": "hub-network.tf",
      "findingGuid": "f-3b58a275922975ed80a77afb6d72f344769e153ef134400f9495da98ceeea86e",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L103..L187",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 103,
      "lineRangeEnd": 187,
      "markdown": "Ensure that RDP access is restricted from the internet\n\n#### Resource\nazurerm_network_security_group.hub_external_network_security_group\n\n#### File\n[hub-network.tf : Lines 103 - 187](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L103..L187)\n\n#### Code\n```\n103: resource \"azurerm_network_security_group\" \"hub_external_network_security_group\" { #tfsec:ignore:azure-network-no-public-ingress\n\n104:   name                = \"hub-external_network_security_group\"\n\n105:   location            = azurerm_resource_group.azure_resource_group.location\n\n106:   resource_group_name = azurerm_resource_group.azure_resource_group.name\n\n107: \n\n108:   # Management access rule for NVA (restricted to management network)\n\n109:   security_rule {\n\n110:     name                       = \"MGMT_rule\"\n\n111:     priority                   = 100\n\n112:     direction                  = \"Inbound\"\n\n113:     access                     = \"Allow\"\n\n114:     protocol                   = \"Tcp\"\n\n115:     source_port_range          = \"*\"\n\n116:     destination_port_range     = local.vm_image[var.hub-nva-image].management-port\n\n117:     source_address_prefixes    = [\"10.0.0.0/16\", \"172.16.0.0/12\", \"192.168.0.0/16\"]\n\n118:     destination_address_prefix = var.hub-nva-management-ip\n\n119:   }\n\n120: \n\n121:   # Virtual IP rule for docs application (public access required)\n\n122:   security_rule {\n\n123:     name                       = \"VIP_rule-docs\"\n\n124:     priority                   = 101\n\n125:     direction                  = \"Inbound\"\n\n126:     access                     = \"Allow\"\n\n127:     protocol                   = \"Tcp\"\n\n128:     source_port_range          = \"*\"\n\n129:     destination_port_ranges    = [\"80\", \"443\"] #checkov:skip=CKV_AZURE_160: Allow HTTP redirects\n\n130:     source_address_prefix      = \"Internet\"\n\n131:     destination_address_prefix = var.hub-nva-vip-docs\n\n132:   }\n\n133: \n\n134:   # Virtual IP rule for DVWA application\n\n135:   security_rule {\n\n136:     name                       = \"VIP_rule-dvwa\"\n\n137:     priority                   = 102\n\n138:     direction                  = \"Inbound\"\n\n139:     access                     = \"Allow\"\n\n140:     protocol                   = \"Tcp\"\n\n141:     source_port_range          = \"*\"\n\n142:     destination_port_ranges    = [\"80\", \"443\"] #checkov:skip=CKV_AZURE_160: Allow HTTP redirects\n\n143:     source_address_prefix      = \"*\"\n\n144:     destination_address_prefix = var.hub-nva-vip-dvwa\n\n145:   }\n\n146: \n\n147:   # Virtual IP rule for Ollama application\n\n148:   security_rule {\n\n149:     name                       = \"VIP_rule-ollama\"\n\n150:     priority                   = 103\n\n151:     direction                  = \"Inbound\"\n\n152:     access                     = \"Allow\"\n\n153:     protocol                   = \"Tcp\"\n\n154:     source_port_range          = \"*\"\n\n155:     destination_port_ranges    = [\"80\", \"443\"] #checkov:skip=CKV_AZURE_160: Allow HTTP redirects\n\n156:     source_address_prefix      = \"*\"\n\n157:     destination_address_prefix = var.hub-nva-vip-ollama\n\n158:   }\n\n159: \n\n160:   # Virtual IP rule for video application\n\n161:   security_rule {\n\n162:     name                       = \"VIP_rule-video\"\n\n163:     priority                   = 104\n\n164:     direction                  = \"Inbound\"\n\n165:     access                     = \"Allow\"\n\n166:     protocol                   = \"Tcp\"\n\n167:     source_port_range          = \"*\"\n\n168:     destination_port_ranges    = [\"80\", \"443\"] #checkov:skip=CKV_AZURE_160: Allow HTTP redirects\n\n169:     source_address_prefix      = \"*\"\n\n170:     destination_address_prefix = var.hub-nva-vip-video\n\n171:   }\n\n172: \n\n173:   # Virtual IP rule for extractor application\n\n174:   security_rule {\n\n175:     name                       = \"VIP_rule-extractor\"\n\n176:     priority                   = 105\n\n177:     direction                  = \"Inbound\"\n\n178:     access                     = \"Allow\"\n\n179:     protocol                   = \"Tcp\"\n\n180:     source_port_range          = \"*\"\n\n181:     destination_port_ranges    = [\"80\", \"443\"] #checkov:skip=CKV_AZURE_160: Allow HTTP redirects\n\n182:     source_address_prefix      = \"*\"\n\n183:     destination_address_prefix = var.hub-nva-vip-extractor\n\n184:   }\n\n185: \n\n186:   tags = local.standard_tags\n\n187: }\n\n```\n\n",
      "partialFingerprint": "a2c73677a00d8eb1:1",
      "pass": true,
      "policyId": "ckv-azure-9",
      "repoPath": "hub-network.tf",
      "resource": "azurerm_network_security_group.hub_external_network_security_group",
      "ruleId": "CKV_AZURE_9",
      "severity": "High",
      "title": "Ensure that RDP access is restricted from the internet"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS",
        "HIPAA"
      ],
      "description": "Disable RDP access on network security groups (NSG) from the Internet. Azure NSG do not allow access to everyone (0.0.0.0/0) on TCP 3389 in order to protect from security attacks. TCP port 3389 is used for remote GUI login to Microsoft VMs by connecting a Remote Desktop Protocol (RDP) client application with an RDP server.",
      "evalGuid": "",
      "fileName": "spoke-network.tf",
      "filePath": "spoke-network.tf",
      "findingGuid": "f-9edc184ba1e0f18f765ce5f7953b990fbb2fee41123055f11d0700c778f95f4b",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-network.tf#L91..L136",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 91,
      "lineRangeEnd": 136,
      "markdown": "Ensure that RDP access is restricted from the internet\n\n#### Resource\nazurerm_network_security_group.spoke_network_security_group\n\n#### File\n[spoke-network.tf : Lines 91 - 136](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-network.tf#L91..L136)\n\n#### Code\n```\n91:  resource \"azurerm_network_security_group\" \"spoke_network_security_group\" {\n\n92:    name                = \"spoke_network_security_group\"\n\n93:    location            = azurerm_resource_group.azure_resource_group.location\n\n94:    resource_group_name = azurerm_resource_group.azure_resource_group.name\n\n95:  \n\n96:    # Allow inbound HTTP traffic for applications (restricted to known sources)\n\n97:    security_rule { #tfsec:ignore:AVD-AZU-0047\n\n98:      name                       = \"inbound-http_rule\"\n\n99:      priority                   = 100\n\n100:     direction                  = \"Inbound\"\n\n101:     access                     = \"Allow\"\n\n102:     protocol                   = \"Tcp\"\n\n103:     source_port_range          = \"*\"\n\n104:     destination_port_ranges    = [\"80\", \"443\", \"8080\", \"8000\"]\n\n105:     source_address_prefixes    = [\"10.0.0.0/16\", \"172.16.0.0/12\", \"192.168.0.0/16\"]\n\n106:     destination_address_prefix = \"*\"\n\n107:   }\n\n108: \n\n109:   # Allow AKS nodes to access internet for updates\n\n110:   security_rule {\n\n111:     name                       = \"aks-node_to_internet_rule\"\n\n112:     priority                   = 100\n\n113:     direction                  = \"Outbound\"\n\n114:     access                     = \"Allow\"\n\n115:     protocol                   = \"Tcp\"\n\n116:     source_port_range          = \"*\"\n\n117:     destination_port_ranges    = [\"80\", \"443\"]\n\n118:     source_address_prefix      = \"10.0.0.0/16\"\n\n119:     destination_address_prefix = \"Internet\"\n\n120:   }\n\n121: \n\n122:   # Allow ICMP for connectivity testing (restricted to specific destinations)\n\n123:   security_rule {\n\n124:     name                         = \"icmp_to_dns_rule\"\n\n125:     priority                     = 101\n\n126:     direction                    = \"Outbound\"\n\n127:     access                       = \"Allow\"\n\n128:     protocol                     = \"Icmp\"\n\n129:     source_port_range            = \"*\"\n\n130:     destination_port_range       = \"*\"\n\n131:     source_address_prefix        = \"10.0.0.0/16\"\n\n132:     destination_address_prefixes = [\"8.8.8.8/32\", \"8.8.4.4/32\", \"1.1.1.1/32\"]\n\n133:   }\n\n134: \n\n135:   tags = local.standard_tags\n\n136: }\n\n```\n\n",
      "partialFingerprint": "c51dd7a3cac001a7:1",
      "pass": true,
      "policyId": "ckv-azure-9",
      "repoPath": "spoke-network.tf",
      "resource": "azurerm_network_security_group.spoke_network_security_group",
      "ruleId": "CKV_AZURE_9",
      "severity": "High",
      "title": "Ensure that RDP access is restricted from the internet"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [],
      "description": "-",
      "evalGuid": "",
      "fileName": "spoke-k8s_cluster.tf",
      "filePath": "spoke-k8s_cluster.tf",
      "findingGuid": "f-d89a79b61434efc4472d71879e583c30e90067c408b077156b7eb484baf3de32",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L175",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 101,
      "lineRangeEnd": 175,
      "longId": "azure-container-configured-network-policy",
      "markdown": "\n\n#### Resource\nazurerm_kubernetes_cluster.kubernetes_cluster\n\n#### File\n[spoke-k8s_cluster.tf : Lines 101 - 175](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L175)\n\n",
      "partialFingerprint": "005b92233789cc3e:1",
      "pass": true,
      "policyId": "tfsec-azu006",
      "repoPath": "spoke-k8s_cluster.tf",
      "resource": "azurerm_kubernetes_cluster.kubernetes_cluster",
      "ruleId": "AVD-AZU-0043",
      "severity": "High",
      "title": "Ensure AKS cluster has Network Policy configured"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS",
        "HIPAA"
      ],
      "description": "Azure AKS is a managed Kubernetes cluster service from Microsoft. AKS operationalize your workload containers on Kubernetes.\nRBAC provides role based access control to the container workloads in AKS cluster. If RBAC is not enabled, the granularity of permissions granted to Kubernetes resources is diminished presenting more permissions than needed to users requiring access to Kubernetes resources in AKS, so ensure that RBAC is enabled on all Azure Kubernetes Services Instances ",
      "evalGuid": "",
      "fileName": "spoke-k8s_cluster.tf",
      "filePath": "spoke-k8s_cluster.tf",
      "findingGuid": "f-57cae6fb6cce922debc014e9b2eb8f4ce306612dc270ac9f3acf4f59115dacc6",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L175",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 101,
      "lineRangeEnd": 175,
      "markdown": "Ensure RBAC is enabled on AKS clusters\n\n#### Resource\nazurerm_kubernetes_cluster.kubernetes_cluster\n\n#### File\n[spoke-k8s_cluster.tf : Lines 101 - 175](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L175)\n\n#### Code\n```\n101: resource \"azurerm_kubernetes_cluster\" \"kubernetes_cluster\" {\n\n102:   depends_on = [\n\n103:     azurerm_virtual_network_peering.spoke_to_hub_virtual_network_peering,\n\n104:     azurerm_linux_virtual_machine.hub-nva_virtual_machine\n\n105:   ]\n\n106: \n\n107:   name                              = local.cluster_name\n\n108:   location                          = azurerm_resource_group.azure_resource_group.location\n\n109:   resource_group_name               = azurerm_resource_group.azure_resource_group.name\n\n110:   dns_prefix                        = azurerm_resource_group.azure_resource_group.name\n\n111:   sku_tier                          = var.production_environment ? \"Standard\" : \"Free\"\n\n112:   cost_analysis_enabled             = var.production_environment ? true : false\n\n113:   support_plan                      = \"KubernetesOfficial\"\n\n114:   kubernetes_version                = \"1.31.8\"\n\n115:   node_resource_group               = local.node_resource_group\n\n116:   role_based_access_control_enabled = true\n\n117:   oidc_issuer_enabled               = true\n\n118:   workload_identity_enabled         = true\n\n119: \n\n120:   # OMS agent for monitoring integration\n\n121:   oms_agent {\n\n122:     log_analytics_workspace_id      = azurerm_log_analytics_workspace.log_analytics.id\n\n123:     msi_auth_for_monitoring_enabled = true\n\n124:   }\n\n125: \n\n126:   # API Server access profile for security\n\n127:   api_server_access_profile {\n\n128:     authorized_ip_ranges = var.production_environment ? [\"10.0.0.0/16\", \"172.16.0.0/12\", \"192.168.0.0/16\"] : []\n\n129:   }\n\n130: \n\n131:   # Azure Policy Add-on for governance\n\n132:   azure_policy_enabled = var.production_environment ? true : false\n\n133: \n\n134:   # Default node pool configuration\n\n135:   default_node_pool {\n\n136:     temporary_name_for_rotation  = \"rotation\"\n\n137:     name                         = \"system\"\n\n138:     auto_scaling_enabled         = var.production_environment\n\n139:     node_count                   = var.production_environment ? 3 : 1\n\n140:     min_count                    = var.production_environment ? 3 : null\n\n141:     max_count                    = var.production_environment ? 7 : null\n\n142:     vm_size                      = var.production_environment ? local.vm_image[\"aks\"].size : local.vm_image[\"aks\"].size-dev\n\n143:     os_sku                       = \"AzureLinux\"\n\n144:     max_pods                     = \"75\"\n\n145:     orchestrator_version         = \"1.30.6\"\n\n146:     vnet_subnet_id               = azurerm_subnet.spoke_subnet.id\n\n147:     only_critical_addons_enabled = var.production_environment ? true : false\n\n148:     os_disk_type                 = \"Managed\"\n\n149:     os_disk_size_gb              = 128\n\n150: \n\n151:     upgrade_settings {\n\n152:       max_surge = var.production_environment ? 10 : 1\n\n153:     }\n\n154: \n\n155:     node_labels = {\n\n156:       \"system-pool\" = \"true\"\n\n157:       \"user-pool\"   = var.production_environment ? false : true\n\n158:     }\n\n159:   }\n\n160: \n\n161:   # Network profile configuration\n\n162:   network_profile {\n\n163:     network_plugin    = \"kubenet\"\n\n164:     network_policy    = \"calico\"\n\n165:     load_balancer_sku = \"standard\"\n\n166:     pod_cidr          = var.spoke-aks_pod_cidr\n\n167:   }\n\n168: \n\n169:   # System-assigned managed identity\n\n170:   identity {\n\n171:     type = \"SystemAssigned\"\n\n172:   }\n\n173: \n\n174:   tags = local.standard_tags\n\n175: }\n\n```\n\n",
      "partialFingerprint": "005b92233789cc3e:1",
      "pass": true,
      "policyId": "ckv-azure-5",
      "repoPath": "spoke-k8s_cluster.tf",
      "resource": "azurerm_kubernetes_cluster.kubernetes_cluster",
      "ruleId": "CKV_AZURE_5",
      "severity": "High",
      "title": "Ensure RBAC is enabled on AKS clusters"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS",
        "HIPAA"
      ],
      "description": "Disable RDP access on network security groups (NSG) from the Internet. Azure NSG do not allow access to everyone (0.0.0.0/0) on TCP 3389 in order to protect from security attacks. TCP port 3389 is used for remote GUI login to Microsoft VMs by connecting a Remote Desktop Protocol (RDP) client application with an RDP server.",
      "evalGuid": "",
      "fileName": "hub-network.tf",
      "filePath": "hub-network.tf",
      "findingGuid": "f-5e3c24d97654f7c4e9420ad1f7cddf4ed4079763be56f1ae8f6a65a37ac43538",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L197..L242",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 197,
      "lineRangeEnd": 242,
      "markdown": "Ensure that RDP access is restricted from the internet\n\n#### Resource\nazurerm_network_security_group.hub_internal_network_security_group\n\n#### File\n[hub-network.tf : Lines 197 - 242](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L197..L242)\n\n#### Code\n```\n197: resource \"azurerm_network_security_group\" \"hub_internal_network_security_group\" {\n\n198:   name                = \"hub-internal_network_security_group\"\n\n199:   location            = azurerm_resource_group.azure_resource_group.location\n\n200:   resource_group_name = azurerm_resource_group.azure_resource_group.name\n\n201: \n\n202:   # Allow AKS node internet access for updates and container pulls\n\n203:   security_rule {\n\n204:     name                       = \"aks-node_to_internet_rule\"\n\n205:     priority                   = 100\n\n206:     direction                  = \"Inbound\"\n\n207:     access                     = \"Allow\"\n\n208:     protocol                   = \"Tcp\"\n\n209:     source_port_range          = \"*\"\n\n210:     destination_port_ranges    = [\"80\", \"443\"]\n\n211:     source_address_prefix      = \"10.0.0.0/8\"\n\n212:     destination_address_prefix = \"*\"\n\n213:   }\n\n214: \n\n215:   # Allow ICMP for connectivity testing (restricted sources and destinations)\n\n216:   security_rule {\n\n217:     name                         = \"icmp_to_dns_rule\"\n\n218:     priority                     = 101\n\n219:     direction                    = \"Inbound\"\n\n220:     access                       = \"Allow\"\n\n221:     protocol                     = \"Icmp\"\n\n222:     source_port_range            = \"*\"\n\n223:     destination_port_range       = \"*\"\n\n224:     source_address_prefix        = \"10.0.0.0/16\"\n\n225:     destination_address_prefixes = [\"8.8.8.8/32\", \"8.8.4.4/32\", \"1.1.1.1/32\"]\n\n226:   }\n\n227: \n\n228:   # Allow outbound HTTP traffic for applications (restricted to internal sources)\n\n229:   security_rule {\n\n230:     name                       = \"outbound-http_rule\"\n\n231:     priority                   = 102\n\n232:     direction                  = \"Outbound\"\n\n233:     access                     = \"Allow\"\n\n234:     protocol                   = \"Tcp\"\n\n235:     source_port_range          = \"*\"\n\n236:     destination_port_ranges    = [\"8000\", \"8080\", \"11434\"]\n\n237:     source_address_prefix      = \"10.0.0.0/16\"\n\n238:     destination_address_prefix = \"Internet\"\n\n239:   }\n\n240: \n\n241:   tags = local.standard_tags\n\n242: }\n\n```\n\n",
      "partialFingerprint": "e8b66372ca54f7ad:1",
      "pass": true,
      "policyId": "ckv-azure-9",
      "repoPath": "hub-network.tf",
      "resource": "azurerm_network_security_group.hub_internal_network_security_group",
      "ruleId": "CKV_AZURE_9",
      "severity": "High",
      "title": "Ensure that RDP access is restricted from the internet"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [],
      "description": "Ensure Azure Instance does not use basic authentication(Use SSH Key Instead)",
      "evalGuid": "",
      "fileName": "hub-nva.tf",
      "filePath": "/hub-nva.tf",
      "findingGuid": "f-9c24543ae5b62329459c11c1316acf4aebd917adf940bd9a16a5abd3fe65bf82",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-nva.tf#L153..L216",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 153,
      "lineRangeEnd": 216,
      "markdown": "Ensure Azure Instance does not use basic authentication(Use SSH Key Instead)\n\n#### Resource\nazurerm_linux_virtual_machine.hub-nva_virtual_machine\n\n#### File\n[hub-nva.tf : Lines 153 - 216](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-nva.tf#L153..L216)\n\n#### Code\n```\n153: resource \"azurerm_linux_virtual_machine\" \"hub-nva_virtual_machine\" {\n\n154:   #checkov:skip=CKV_AZURE_178: Allow Fortigate to present HTTPS login UI instead of SSH\n\n155:   #checkov:skip=CKV_AZURE_149: Allow Fortigate to present HTTPS login UI instead of SSH\n\n156:   #checkov:skip=CKV_AZURE_1: Allow Fortigate to present HTTPS login UI instead of SSH\n\n157:   #depends_on                      = [null_resource.marketplace_agreement, azurerm_managed_disk.log_disk]\n\n158:   depends_on                      = [null_resource.marketplace_agreement]\n\n159:   name                            = \"hub-nva_virtual_machine\"\n\n160:   computer_name                   = \"hub-nva\"\n\n161:   availability_set_id             = azurerm_availability_set.hub_nva_availability_set.id\n\n162:   admin_username                  = var.hub_nva_username\n\n163:   disable_password_authentication = false #tfsec:ignore:AVD-AZU-0039\n\n164:   admin_password                  = var.hub_nva_password\n\n165:   location                        = azurerm_resource_group.azure_resource_group.location\n\n166:   resource_group_name             = azurerm_resource_group.azure_resource_group.name\n\n167:   network_interface_ids           = [azurerm_network_interface.hub_nva_external_network_interface.id, azurerm_network_interface.hub_nva_internal_network_interface.id]\n\n168:   size                            = var.production_environment ? local.vm_image[var.hub-nva-image].size : local.vm_image[var.hub-nva-image].size-dev\n\n169:   allow_extension_operations      = false\n\n170: \n\n171:   identity {\n\n172:     type = \"SystemAssigned\"\n\n173:   }\n\n174:   os_disk {\n\n175:     caching              = \"ReadWrite\"\n\n176:     storage_account_type = var.production_environment ? \"Premium_LRS\" : \"Standard_LRS\"\n\n177:     #disk_size_gb = var.production_environment ? 256 : 128\n\n178:   }\n\n179:   plan {\n\n180:     name      = local.vm_image[var.hub-nva-image].sku\n\n181:     product   = local.vm_image[var.hub-nva-image].offer\n\n182:     publisher = local.vm_image[var.hub-nva-image].publisher\n\n183:   }\n\n184:   source_image_reference {\n\n185:     offer     = local.vm_image[var.hub-nva-image].offer\n\n186:     publisher = local.vm_image[var.hub-nva-image].publisher\n\n187:     sku       = local.vm_image[var.hub-nva-image].sku\n\n188:     version   = \"latest\"\n\n189:   }\n\n190:   custom_data = base64encode(\n\n191:     templatefile(\"cloud-init/${var.hub-nva-image}.conf\",\n\n192:       {\n\n193:         VAR-config-system-global-admin-sport     = local.vm_image[var.hub-nva-image].management-port\n\n194:         VAR-hub-external-subnet-gateway          = var.hub-external-subnet-gateway\n\n195:         VAR-spoke-check-internet-up-ip           = var.spoke-check-internet-up-ip\n\n196:         VAR-spoke-default-gateway                = cidrhost(var.hub-internal-subnet_prefix, 1)\n\n197:         VAR-spoke-virtual-network_address_prefix = var.spoke-virtual-network_address_prefix\n\n198:         VAR-spoke-virtual-network_subnet         = cidrhost(var.spoke-virtual-network_address_prefix, 0)\n\n199:         VAR-spoke-virtual-network_netmask        = cidrnetmask(var.spoke-virtual-network_address_prefix)\n\n200:         VAR-spoke-aks-node-ip                    = var.spoke-aks-node-ip\n\n201:         VAR-hub-nva-vip-docs                     = var.hub-nva-vip-docs\n\n202:         VAR-hub-nva-vip-ollama                   = var.hub-nva-vip-ollama\n\n203:         VAR-hub-nva-vip-video                    = var.hub-nva-vip-video\n\n204:         VAR-hub-nva-vip-dvwa                     = var.hub-nva-vip-dvwa\n\n205:         VAR-hub-nva-vip-artifacts                = var.hub-nva-vip-artifacts\n\n206:         VAR-hub-nva-vip-extractor                = var.hub-nva-vip-extractor\n\n207:         VAR-HUB_NVA_USERNAME                     = var.hub_nva_username\n\n208:         VAR-CERTIFICATE                          = tls_self_signed_cert.self_signed_cert.cert_pem\n\n209:         VAR-PRIVATEKEY                           = tls_private_key.private_key.private_key_pem\n\n210:         VAR-fwb_license_file                     = \"\"\n\n211:         VAR-fwb_license_fortiflex                = \"\"\n\n212:         VAR-spoke-aks-network                    = var.spoke-aks-subnet_prefix\n\n213:       }\n\n214:     )\n\n215:   )\n\n216: }\n\n```\n\n",
      "partialFingerprint": "",
      "pass": true,
      "policyId": "ckv-azure-1",
      "repoPath": "/hub-nva.tf",
      "resource": "azurerm_linux_virtual_machine.hub-nva_virtual_machine",
      "ruleId": "CKV_AZURE_1",
      "severity": "High",
      "title": "Ensure Azure Instance does not use basic authentication"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS",
        "HIPAA"
      ],
      "description": "-",
      "evalGuid": "",
      "fileName": "spoke-k8s_cluster.tf",
      "filePath": "spoke-k8s_cluster.tf",
      "findingGuid": "f-f8fee4302e012ac91f29f0792f210db51a99a77374025213c5528625fc4be216",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L175",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 101,
      "lineRangeEnd": 175,
      "longId": "azure-container-use-rbac-permissions",
      "markdown": "\n\n#### Resource\nazurerm_kubernetes_cluster.kubernetes_cluster\n\n#### File\n[spoke-k8s_cluster.tf : Lines 101 - 175](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L175)\n\n",
      "partialFingerprint": "005b92233789cc3e:1",
      "pass": true,
      "policyId": "tfsec-azu007",
      "repoPath": "spoke-k8s_cluster.tf",
      "resource": "azurerm_kubernetes_cluster.kubernetes_cluster",
      "ruleId": "AVD-AZU-0042",
      "severity": "High",
      "title": "Ensure RBAC is enabled on AKS clusters"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [],
      "description": "Ensure that UDP Services are restricted from the Internet",
      "evalGuid": "",
      "fileName": "hub-network.tf",
      "filePath": "hub-network.tf",
      "findingGuid": "f-5be892d3f291aa3e21c6f0cbc0883d662ca1c9557eb85f87c95a0ed252e4d642",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L197..L242",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 197,
      "lineRangeEnd": 242,
      "markdown": "Ensure that UDP Services are restricted from the Internet \n\n#### Resource\nazurerm_network_security_group.hub_internal_network_security_group\n\n#### File\n[hub-network.tf : Lines 197 - 242](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L197..L242)\n\n#### Code\n```\n197: resource \"azurerm_network_security_group\" \"hub_internal_network_security_group\" {\n\n198:   name                = \"hub-internal_network_security_group\"\n\n199:   location            = azurerm_resource_group.azure_resource_group.location\n\n200:   resource_group_name = azurerm_resource_group.azure_resource_group.name\n\n201: \n\n202:   # Allow AKS node internet access for updates and container pulls\n\n203:   security_rule {\n\n204:     name                       = \"aks-node_to_internet_rule\"\n\n205:     priority                   = 100\n\n206:     direction                  = \"Inbound\"\n\n207:     access                     = \"Allow\"\n\n208:     protocol                   = \"Tcp\"\n\n209:     source_port_range          = \"*\"\n\n210:     destination_port_ranges    = [\"80\", \"443\"]\n\n211:     source_address_prefix      = \"10.0.0.0/8\"\n\n212:     destination_address_prefix = \"*\"\n\n213:   }\n\n214: \n\n215:   # Allow ICMP for connectivity testing (restricted sources and destinations)\n\n216:   security_rule {\n\n217:     name                         = \"icmp_to_dns_rule\"\n\n218:     priority                     = 101\n\n219:     direction                    = \"Inbound\"\n\n220:     access                       = \"Allow\"\n\n221:     protocol                     = \"Icmp\"\n\n222:     source_port_range            = \"*\"\n\n223:     destination_port_range       = \"*\"\n\n224:     source_address_prefix        = \"10.0.0.0/16\"\n\n225:     destination_address_prefixes = [\"8.8.8.8/32\", \"8.8.4.4/32\", \"1.1.1.1/32\"]\n\n226:   }\n\n227: \n\n228:   # Allow outbound HTTP traffic for applications (restricted to internal sources)\n\n229:   security_rule {\n\n230:     name                       = \"outbound-http_rule\"\n\n231:     priority                   = 102\n\n232:     direction                  = \"Outbound\"\n\n233:     access                     = \"Allow\"\n\n234:     protocol                   = \"Tcp\"\n\n235:     source_port_range          = \"*\"\n\n236:     destination_port_ranges    = [\"8000\", \"8080\", \"11434\"]\n\n237:     source_address_prefix      = \"10.0.0.0/16\"\n\n238:     destination_address_prefix = \"Internet\"\n\n239:   }\n\n240: \n\n241:   tags = local.standard_tags\n\n242: }\n\n```\n\n",
      "partialFingerprint": "e8b66372ca54f7ad:1",
      "pass": true,
      "policyId": "ckv-azure-77",
      "repoPath": "hub-network.tf",
      "resource": "azurerm_network_security_group.hub_internal_network_security_group",
      "ruleId": "CKV_AZURE_77",
      "severity": "Medium",
      "title": "Ensure that UDP Services are restricted from the Internet"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS"
      ],
      "description": "Azure AKS is a managed Kubernetes cluster service from Microsoft. AKS operationalize your workload containers on Kubernetes.\nIn AKS cluster, the API server receives requests to perform actions in the cluster such as create, delete, update and scale resources. So having it exposed to everywhere can lead to security attacks. ",
      "evalGuid": "",
      "fileName": "spoke-k8s_cluster.tf",
      "filePath": "spoke-k8s_cluster.tf",
      "findingGuid": "f-d024dcb18ba90765e5abc092e1a570e58c9a694065fe682483ff1d618668508f",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L175",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 101,
      "lineRangeEnd": 175,
      "markdown": "Ensure AKS has an API Server Authorized IP Ranges enabled\n\n#### Resource\nazurerm_kubernetes_cluster.kubernetes_cluster\n\n#### File\n[spoke-k8s_cluster.tf : Lines 101 - 175](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L175)\n\n#### Code\n```\n101: resource \"azurerm_kubernetes_cluster\" \"kubernetes_cluster\" {\n\n102:   depends_on = [\n\n103:     azurerm_virtual_network_peering.spoke_to_hub_virtual_network_peering,\n\n104:     azurerm_linux_virtual_machine.hub-nva_virtual_machine\n\n105:   ]\n\n106: \n\n107:   name                              = local.cluster_name\n\n108:   location                          = azurerm_resource_group.azure_resource_group.location\n\n109:   resource_group_name               = azurerm_resource_group.azure_resource_group.name\n\n110:   dns_prefix                        = azurerm_resource_group.azure_resource_group.name\n\n111:   sku_tier                          = var.production_environment ? \"Standard\" : \"Free\"\n\n112:   cost_analysis_enabled             = var.production_environment ? true : false\n\n113:   support_plan                      = \"KubernetesOfficial\"\n\n114:   kubernetes_version                = \"1.31.8\"\n\n115:   node_resource_group               = local.node_resource_group\n\n116:   role_based_access_control_enabled = true\n\n117:   oidc_issuer_enabled               = true\n\n118:   workload_identity_enabled         = true\n\n119: \n\n120:   # OMS agent for monitoring integration\n\n121:   oms_agent {\n\n122:     log_analytics_workspace_id      = azurerm_log_analytics_workspace.log_analytics.id\n\n123:     msi_auth_for_monitoring_enabled = true\n\n124:   }\n\n125: \n\n126:   # API Server access profile for security\n\n127:   api_server_access_profile {\n\n128:     authorized_ip_ranges = var.production_environment ? [\"10.0.0.0/16\", \"172.16.0.0/12\", \"192.168.0.0/16\"] : []\n\n129:   }\n\n130: \n\n131:   # Azure Policy Add-on for governance\n\n132:   azure_policy_enabled = var.production_environment ? true : false\n\n133: \n\n134:   # Default node pool configuration\n\n135:   default_node_pool {\n\n136:     temporary_name_for_rotation  = \"rotation\"\n\n137:     name                         = \"system\"\n\n138:     auto_scaling_enabled         = var.production_environment\n\n139:     node_count                   = var.production_environment ? 3 : 1\n\n140:     min_count                    = var.production_environment ? 3 : null\n\n141:     max_count                    = var.production_environment ? 7 : null\n\n142:     vm_size                      = var.production_environment ? local.vm_image[\"aks\"].size : local.vm_image[\"aks\"].size-dev\n\n143:     os_sku                       = \"AzureLinux\"\n\n144:     max_pods                     = \"75\"\n\n145:     orchestrator_version         = \"1.30.6\"\n\n146:     vnet_subnet_id               = azurerm_subnet.spoke_subnet.id\n\n147:     only_critical_addons_enabled = var.production_environment ? true : false\n\n148:     os_disk_type                 = \"Managed\"\n\n149:     os_disk_size_gb              = 128\n\n150: \n\n151:     upgrade_settings {\n\n152:       max_surge = var.production_environment ? 10 : 1\n\n153:     }\n\n154: \n\n155:     node_labels = {\n\n156:       \"system-pool\" = \"true\"\n\n157:       \"user-pool\"   = var.production_environment ? false : true\n\n158:     }\n\n159:   }\n\n160: \n\n161:   # Network profile configuration\n\n162:   network_profile {\n\n163:     network_plugin    = \"kubenet\"\n\n164:     network_policy    = \"calico\"\n\n165:     load_balancer_sku = \"standard\"\n\n166:     pod_cidr          = var.spoke-aks_pod_cidr\n\n167:   }\n\n168: \n\n169:   # System-assigned managed identity\n\n170:   identity {\n\n171:     type = \"SystemAssigned\"\n\n172:   }\n\n173: \n\n174:   tags = local.standard_tags\n\n175: }\n\n```\n\n",
      "partialFingerprint": "005b92233789cc3e:1",
      "pass": true,
      "policyId": "ckv-azure-6",
      "repoPath": "spoke-k8s_cluster.tf",
      "resource": "azurerm_kubernetes_cluster.kubernetes_cluster",
      "ruleId": "CKV_AZURE_6",
      "severity": "Medium",
      "title": "Ensure AKS has an API Server Authorized IP Ranges enabled"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [],
      "description": "Ensure that Network Interfaces disable IP forwarding",
      "evalGuid": "",
      "fileName": "hub-nva.tf",
      "filePath": "hub-nva.tf",
      "findingGuid": "f-e226019f308ade243aa2024a8287e1d6c369d727aa3308d3007a2fd9db2f5ce2",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-nva.tf#L113..L133",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 113,
      "lineRangeEnd": 133,
      "markdown": "Ensure that Network Interfaces disable IP forwarding\n\n#### Resource\nazurerm_network_interface.hub_nva_external_network_interface\n\n#### File\n[hub-nva.tf : Lines 113 - 133](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-nva.tf#L113..L133)\n\n#### Code\n```\n113: resource \"azurerm_network_interface\" \"hub_nva_external_network_interface\" {\n\n114:   name                           = \"hub-nva-external_network_interface\"\n\n115:   location                       = azurerm_resource_group.azure_resource_group.location\n\n116:   resource_group_name            = azurerm_resource_group.azure_resource_group.name\n\n117:   accelerated_networking_enabled = true\n\n118: \n\n119:   dynamic \"ip_configuration\" {\n\n120:     for_each = [for ip in local.ip_configurations : ip if ip.condition]\n\n121: \n\n122:     content {\n\n123:       name                          = ip_configuration.value.name\n\n124:       primary                       = lookup(ip_configuration.value, \"primary\", false)\n\n125:       private_ip_address_allocation = ip_configuration.value.private_ip_address_allocation\n\n126:       private_ip_address            = ip_configuration.value.private_ip_address\n\n127:       subnet_id                     = ip_configuration.value.subnet_id\n\n128:       public_ip_address_id          = ip_configuration.value.public_ip_address_id\n\n129:     }\n\n130:   }\n\n131: \n\n132:   tags = local.standard_tags\n\n133: }\n\n```\n\n",
      "partialFingerprint": "a5a2c7485a8e5068:1",
      "pass": true,
      "policyId": "ckv-azure-118",
      "repoPath": "hub-nva.tf",
      "resource": "azurerm_network_interface.hub_nva_external_network_interface",
      "ruleId": "CKV_AZURE_118",
      "severity": "Medium",
      "title": "Ensure that Network Interfaces disable IP forwarding"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [],
      "description": "Ensure that Virtual Machines use managed disks",
      "evalGuid": "",
      "fileName": "hub-nva.tf",
      "filePath": "hub-nva.tf",
      "findingGuid": "f-45b359a20a5b33dc88635cc248b3032ada71252ddda2a525054b008a4d826aea",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-nva.tf#L153..L216",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 153,
      "lineRangeEnd": 216,
      "markdown": "Ensure that Virtual Machines use managed disks\n\n#### Resource\nazurerm_linux_virtual_machine.hub-nva_virtual_machine\n\n#### File\n[hub-nva.tf : Lines 153 - 216](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-nva.tf#L153..L216)\n\n#### Code\n```\n153: resource \"azurerm_linux_virtual_machine\" \"hub-nva_virtual_machine\" {\n\n154:   #checkov:skip=CKV_AZURE_178: Allow Fortigate to present HTTPS login UI instead of SSH\n\n155:   #checkov:skip=CKV_AZURE_149: Allow Fortigate to present HTTPS login UI instead of SSH\n\n156:   #checkov:skip=CKV_AZURE_1: Allow Fortigate to present HTTPS login UI instead of SSH\n\n157:   #depends_on                      = [null_resource.marketplace_agreement, azurerm_managed_disk.log_disk]\n\n158:   depends_on                      = [null_resource.marketplace_agreement]\n\n159:   name                            = \"hub-nva_virtual_machine\"\n\n160:   computer_name                   = \"hub-nva\"\n\n161:   availability_set_id             = azurerm_availability_set.hub_nva_availability_set.id\n\n162:   admin_username                  = var.hub_nva_username\n\n163:   disable_password_authentication = false #tfsec:ignore:AVD-AZU-0039\n\n164:   admin_password                  = var.hub_nva_password\n\n165:   location                        = azurerm_resource_group.azure_resource_group.location\n\n166:   resource_group_name             = azurerm_resource_group.azure_resource_group.name\n\n167:   network_interface_ids           = [azurerm_network_interface.hub_nva_external_network_interface.id, azurerm_network_interface.hub_nva_internal_network_interface.id]\n\n168:   size                            = var.production_environment ? local.vm_image[var.hub-nva-image].size : local.vm_image[var.hub-nva-image].size-dev\n\n169:   allow_extension_operations      = false\n\n170: \n\n171:   identity {\n\n172:     type = \"SystemAssigned\"\n\n173:   }\n\n174:   os_disk {\n\n175:     caching              = \"ReadWrite\"\n\n176:     storage_account_type = var.production_environment ? \"Premium_LRS\" : \"Standard_LRS\"\n\n177:     #disk_size_gb = var.production_environment ? 256 : 128\n\n178:   }\n\n179:   plan {\n\n180:     name      = local.vm_image[var.hub-nva-image].sku\n\n181:     product   = local.vm_image[var.hub-nva-image].offer\n\n182:     publisher = local.vm_image[var.hub-nva-image].publisher\n\n183:   }\n\n184:   source_image_reference {\n\n185:     offer     = local.vm_image[var.hub-nva-image].offer\n\n186:     publisher = local.vm_image[var.hub-nva-image].publisher\n\n187:     sku       = local.vm_image[var.hub-nva-image].sku\n\n188:     version   = \"latest\"\n\n189:   }\n\n190:   custom_data = base64encode(\n\n191:     templatefile(\"cloud-init/${var.hub-nva-image}.conf\",\n\n192:       {\n\n193:         VAR-config-system-global-admin-sport     = local.vm_image[var.hub-nva-image].management-port\n\n194:         VAR-hub-external-subnet-gateway          = var.hub-external-subnet-gateway\n\n195:         VAR-spoke-check-internet-up-ip           = var.spoke-check-internet-up-ip\n\n196:         VAR-spoke-default-gateway                = cidrhost(var.hub-internal-subnet_prefix, 1)\n\n197:         VAR-spoke-virtual-network_address_prefix = var.spoke-virtual-network_address_prefix\n\n198:         VAR-spoke-virtual-network_subnet         = cidrhost(var.spoke-virtual-network_address_prefix, 0)\n\n199:         VAR-spoke-virtual-network_netmask        = cidrnetmask(var.spoke-virtual-network_address_prefix)\n\n200:         VAR-spoke-aks-node-ip                    = var.spoke-aks-node-ip\n\n201:         VAR-hub-nva-vip-docs                     = var.hub-nva-vip-docs\n\n202:         VAR-hub-nva-vip-ollama                   = var.hub-nva-vip-ollama\n\n203:         VAR-hub-nva-vip-video                    = var.hub-nva-vip-video\n\n204:         VAR-hub-nva-vip-dvwa                     = var.hub-nva-vip-dvwa\n\n205:         VAR-hub-nva-vip-artifacts                = var.hub-nva-vip-artifacts\n\n206:         VAR-hub-nva-vip-extractor                = var.hub-nva-vip-extractor\n\n207:         VAR-HUB_NVA_USERNAME                     = var.hub_nva_username\n\n208:         VAR-CERTIFICATE                          = tls_self_signed_cert.self_signed_cert.cert_pem\n\n209:         VAR-PRIVATEKEY                           = tls_private_key.private_key.private_key_pem\n\n210:         VAR-fwb_license_file                     = \"\"\n\n211:         VAR-fwb_license_fortiflex                = \"\"\n\n212:         VAR-spoke-aks-network                    = var.spoke-aks-subnet_prefix\n\n213:       }\n\n214:     )\n\n215:   )\n\n216: }\n\n```\n\n",
      "partialFingerprint": "df5d62504555acf7:1",
      "pass": true,
      "policyId": "ckv-azure-92",
      "repoPath": "hub-nva.tf",
      "resource": "azurerm_linux_virtual_machine.hub-nva_virtual_machine",
      "ruleId": "CKV_AZURE_92",
      "severity": "Medium",
      "title": "Ensure that Virtual Machines use managed disks"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [],
      "description": "Ensure that Network Interfaces don't use public IPs",
      "evalGuid": "",
      "fileName": "hub-nva.tf",
      "filePath": "hub-nva.tf",
      "findingGuid": "f-3e3f00c0bd0874dea18aa7b671088d61fb39aa3196cd9bd191b2748609f74211",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-nva.tf#L113..L133",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 113,
      "lineRangeEnd": 133,
      "markdown": "Ensure that Network Interfaces don't use public IPs\n\n#### Resource\nazurerm_network_interface.hub_nva_external_network_interface\n\n#### File\n[hub-nva.tf : Lines 113 - 133](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-nva.tf#L113..L133)\n\n#### Code\n```\n113: resource \"azurerm_network_interface\" \"hub_nva_external_network_interface\" {\n\n114:   name                           = \"hub-nva-external_network_interface\"\n\n115:   location                       = azurerm_resource_group.azure_resource_group.location\n\n116:   resource_group_name            = azurerm_resource_group.azure_resource_group.name\n\n117:   accelerated_networking_enabled = true\n\n118: \n\n119:   dynamic \"ip_configuration\" {\n\n120:     for_each = [for ip in local.ip_configurations : ip if ip.condition]\n\n121: \n\n122:     content {\n\n123:       name                          = ip_configuration.value.name\n\n124:       primary                       = lookup(ip_configuration.value, \"primary\", false)\n\n125:       private_ip_address_allocation = ip_configuration.value.private_ip_address_allocation\n\n126:       private_ip_address            = ip_configuration.value.private_ip_address\n\n127:       subnet_id                     = ip_configuration.value.subnet_id\n\n128:       public_ip_address_id          = ip_configuration.value.public_ip_address_id\n\n129:     }\n\n130:   }\n\n131: \n\n132:   tags = local.standard_tags\n\n133: }\n\n```\n\n",
      "partialFingerprint": "a5a2c7485a8e5068:1",
      "pass": true,
      "policyId": "ckv-azure-119",
      "repoPath": "hub-nva.tf",
      "resource": "azurerm_network_interface.hub_nva_external_network_interface",
      "ruleId": "CKV_AZURE_119",
      "severity": "Medium",
      "title": "Ensure that Network Interfaces don't use public IPs"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [],
      "description": "Ensure that Network Interfaces don't use public IPs",
      "evalGuid": "",
      "fileName": "hub-nva.tf",
      "filePath": "hub-nva.tf",
      "findingGuid": "f-252d4e5faa0bf494ac5e8aa52e5c4c2935b7740e3a8ae23eaa8771b01bc5356d",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-nva.tf#L136..L151",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 136,
      "lineRangeEnd": 151,
      "markdown": "Ensure that Network Interfaces don't use public IPs\n\n#### Resource\nazurerm_network_interface.hub_nva_internal_network_interface\n\n#### File\n[hub-nva.tf : Lines 136 - 151](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-nva.tf#L136..L151)\n\n#### Code\n```\n136: resource \"azurerm_network_interface\" \"hub_nva_internal_network_interface\" {\n\n137:   name                           = \"hub-nva-internal_network_interface\"\n\n138:   location                       = azurerm_resource_group.azure_resource_group.location\n\n139:   resource_group_name            = azurerm_resource_group.azure_resource_group.name\n\n140:   accelerated_networking_enabled = true\n\n141:   ip_forwarding_enabled          = true #checkov:skip=CKV_AZURE_118:Fortigate NIC needs IP forwarding.\n\n142: \n\n143:   ip_configuration {\n\n144:     name                          = \"hub-nva-internal_ip_configuration\"\n\n145:     private_ip_address_allocation = \"Static\"\n\n146:     private_ip_address            = var.hub-nva-gateway\n\n147:     subnet_id                     = azurerm_subnet.hub_internal_subnet.id\n\n148:   }\n\n149: \n\n150:   tags = local.standard_tags\n\n151: }\n\n```\n\n",
      "partialFingerprint": "d73d69d510e7f024:1",
      "pass": true,
      "policyId": "ckv-azure-119",
      "repoPath": "hub-nva.tf",
      "resource": "azurerm_network_interface.hub_nva_internal_network_interface",
      "ruleId": "CKV_AZURE_119",
      "severity": "Medium",
      "title": "Ensure that Network Interfaces don't use public IPs"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [],
      "description": "Ensure that Network Interfaces disable IP forwarding",
      "evalGuid": "",
      "fileName": "hub-nva.tf",
      "filePath": "/hub-nva.tf",
      "findingGuid": "f-ee691484ee318d379a749e04a53ed7688179ae8a6607636b9a9eab50b04d0aa9",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-nva.tf#L136..L151",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 136,
      "lineRangeEnd": 151,
      "markdown": "Ensure that Network Interfaces disable IP forwarding\n\n#### Resource\nazurerm_network_interface.hub_nva_internal_network_interface\n\n#### File\n[hub-nva.tf : Lines 136 - 151](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-nva.tf#L136..L151)\n\n#### Code\n```\n136: resource \"azurerm_network_interface\" \"hub_nva_internal_network_interface\" {\n\n137:   name                           = \"hub-nva-internal_network_interface\"\n\n138:   location                       = azurerm_resource_group.azure_resource_group.location\n\n139:   resource_group_name            = azurerm_resource_group.azure_resource_group.name\n\n140:   accelerated_networking_enabled = true\n\n141:   ip_forwarding_enabled          = true #checkov:skip=CKV_AZURE_118:Fortigate NIC needs IP forwarding.\n\n142: \n\n143:   ip_configuration {\n\n144:     name                          = \"hub-nva-internal_ip_configuration\"\n\n145:     private_ip_address_allocation = \"Static\"\n\n146:     private_ip_address            = var.hub-nva-gateway\n\n147:     subnet_id                     = azurerm_subnet.hub_internal_subnet.id\n\n148:   }\n\n149: \n\n150:   tags = local.standard_tags\n\n151: }\n\n```\n\n",
      "partialFingerprint": "",
      "pass": true,
      "policyId": "ckv-azure-118",
      "repoPath": "/hub-nva.tf",
      "resource": "azurerm_network_interface.hub_nva_internal_network_interface",
      "ruleId": "CKV_AZURE_118",
      "severity": "Medium",
      "title": "Ensure that Network Interfaces disable IP forwarding"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [],
      "description": "Ensure that UDP Services are restricted from the Internet",
      "evalGuid": "",
      "fileName": "hub-network.tf",
      "filePath": "hub-network.tf",
      "findingGuid": "f-e31ea8e6d69eaa5294daa0f1c84a00995198615808f8c22cd436ff4d662a183c",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L103..L187",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 103,
      "lineRangeEnd": 187,
      "markdown": "Ensure that UDP Services are restricted from the Internet \n\n#### Resource\nazurerm_network_security_group.hub_external_network_security_group\n\n#### File\n[hub-network.tf : Lines 103 - 187](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-network.tf#L103..L187)\n\n#### Code\n```\n103: resource \"azurerm_network_security_group\" \"hub_external_network_security_group\" { #tfsec:ignore:azure-network-no-public-ingress\n\n104:   name                = \"hub-external_network_security_group\"\n\n105:   location            = azurerm_resource_group.azure_resource_group.location\n\n106:   resource_group_name = azurerm_resource_group.azure_resource_group.name\n\n107: \n\n108:   # Management access rule for NVA (restricted to management network)\n\n109:   security_rule {\n\n110:     name                       = \"MGMT_rule\"\n\n111:     priority                   = 100\n\n112:     direction                  = \"Inbound\"\n\n113:     access                     = \"Allow\"\n\n114:     protocol                   = \"Tcp\"\n\n115:     source_port_range          = \"*\"\n\n116:     destination_port_range     = local.vm_image[var.hub-nva-image].management-port\n\n117:     source_address_prefixes    = [\"10.0.0.0/16\", \"172.16.0.0/12\", \"192.168.0.0/16\"]\n\n118:     destination_address_prefix = var.hub-nva-management-ip\n\n119:   }\n\n120: \n\n121:   # Virtual IP rule for docs application (public access required)\n\n122:   security_rule {\n\n123:     name                       = \"VIP_rule-docs\"\n\n124:     priority                   = 101\n\n125:     direction                  = \"Inbound\"\n\n126:     access                     = \"Allow\"\n\n127:     protocol                   = \"Tcp\"\n\n128:     source_port_range          = \"*\"\n\n129:     destination_port_ranges    = [\"80\", \"443\"] #checkov:skip=CKV_AZURE_160: Allow HTTP redirects\n\n130:     source_address_prefix      = \"Internet\"\n\n131:     destination_address_prefix = var.hub-nva-vip-docs\n\n132:   }\n\n133: \n\n134:   # Virtual IP rule for DVWA application\n\n135:   security_rule {\n\n136:     name                       = \"VIP_rule-dvwa\"\n\n137:     priority                   = 102\n\n138:     direction                  = \"Inbound\"\n\n139:     access                     = \"Allow\"\n\n140:     protocol                   = \"Tcp\"\n\n141:     source_port_range          = \"*\"\n\n142:     destination_port_ranges    = [\"80\", \"443\"] #checkov:skip=CKV_AZURE_160: Allow HTTP redirects\n\n143:     source_address_prefix      = \"*\"\n\n144:     destination_address_prefix = var.hub-nva-vip-dvwa\n\n145:   }\n\n146: \n\n147:   # Virtual IP rule for Ollama application\n\n148:   security_rule {\n\n149:     name                       = \"VIP_rule-ollama\"\n\n150:     priority                   = 103\n\n151:     direction                  = \"Inbound\"\n\n152:     access                     = \"Allow\"\n\n153:     protocol                   = \"Tcp\"\n\n154:     source_port_range          = \"*\"\n\n155:     destination_port_ranges    = [\"80\", \"443\"] #checkov:skip=CKV_AZURE_160: Allow HTTP redirects\n\n156:     source_address_prefix      = \"*\"\n\n157:     destination_address_prefix = var.hub-nva-vip-ollama\n\n158:   }\n\n159: \n\n160:   # Virtual IP rule for video application\n\n161:   security_rule {\n\n162:     name                       = \"VIP_rule-video\"\n\n163:     priority                   = 104\n\n164:     direction                  = \"Inbound\"\n\n165:     access                     = \"Allow\"\n\n166:     protocol                   = \"Tcp\"\n\n167:     source_port_range          = \"*\"\n\n168:     destination_port_ranges    = [\"80\", \"443\"] #checkov:skip=CKV_AZURE_160: Allow HTTP redirects\n\n169:     source_address_prefix      = \"*\"\n\n170:     destination_address_prefix = var.hub-nva-vip-video\n\n171:   }\n\n172: \n\n173:   # Virtual IP rule for extractor application\n\n174:   security_rule {\n\n175:     name                       = \"VIP_rule-extractor\"\n\n176:     priority                   = 105\n\n177:     direction                  = \"Inbound\"\n\n178:     access                     = \"Allow\"\n\n179:     protocol                   = \"Tcp\"\n\n180:     source_port_range          = \"*\"\n\n181:     destination_port_ranges    = [\"80\", \"443\"] #checkov:skip=CKV_AZURE_160: Allow HTTP redirects\n\n182:     source_address_prefix      = \"*\"\n\n183:     destination_address_prefix = var.hub-nva-vip-extractor\n\n184:   }\n\n185: \n\n186:   tags = local.standard_tags\n\n187: }\n\n```\n\n",
      "partialFingerprint": "a2c73677a00d8eb1:1",
      "pass": true,
      "policyId": "ckv-azure-77",
      "repoPath": "hub-network.tf",
      "resource": "azurerm_network_security_group.hub_external_network_security_group",
      "ruleId": "CKV_AZURE_77",
      "severity": "Medium",
      "title": "Ensure that UDP Services are restricted from the Internet"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS"
      ],
      "description": "In MicroService based architecture on Kubernetes, you would want to control which service can communicate to what other services. In order for the communication, we need a network policy to be configured.",
      "evalGuid": "",
      "fileName": "spoke-k8s_cluster.tf",
      "filePath": "spoke-k8s_cluster.tf",
      "findingGuid": "f-af8a2d3f670f965d8ef0baea832fa34b53567628b98710cffdec97da0b3e57d3",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L175",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 101,
      "lineRangeEnd": 175,
      "markdown": "Ensure AKS cluster has Network Policy configured\n\n#### Resource\nazurerm_kubernetes_cluster.kubernetes_cluster\n\n#### File\n[spoke-k8s_cluster.tf : Lines 101 - 175](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L175)\n\n#### Code\n```\n101: resource \"azurerm_kubernetes_cluster\" \"kubernetes_cluster\" {\n\n102:   depends_on = [\n\n103:     azurerm_virtual_network_peering.spoke_to_hub_virtual_network_peering,\n\n104:     azurerm_linux_virtual_machine.hub-nva_virtual_machine\n\n105:   ]\n\n106: \n\n107:   name                              = local.cluster_name\n\n108:   location                          = azurerm_resource_group.azure_resource_group.location\n\n109:   resource_group_name               = azurerm_resource_group.azure_resource_group.name\n\n110:   dns_prefix                        = azurerm_resource_group.azure_resource_group.name\n\n111:   sku_tier                          = var.production_environment ? \"Standard\" : \"Free\"\n\n112:   cost_analysis_enabled             = var.production_environment ? true : false\n\n113:   support_plan                      = \"KubernetesOfficial\"\n\n114:   kubernetes_version                = \"1.31.8\"\n\n115:   node_resource_group               = local.node_resource_group\n\n116:   role_based_access_control_enabled = true\n\n117:   oidc_issuer_enabled               = true\n\n118:   workload_identity_enabled         = true\n\n119: \n\n120:   # OMS agent for monitoring integration\n\n121:   oms_agent {\n\n122:     log_analytics_workspace_id      = azurerm_log_analytics_workspace.log_analytics.id\n\n123:     msi_auth_for_monitoring_enabled = true\n\n124:   }\n\n125: \n\n126:   # API Server access profile for security\n\n127:   api_server_access_profile {\n\n128:     authorized_ip_ranges = var.production_environment ? [\"10.0.0.0/16\", \"172.16.0.0/12\", \"192.168.0.0/16\"] : []\n\n129:   }\n\n130: \n\n131:   # Azure Policy Add-on for governance\n\n132:   azure_policy_enabled = var.production_environment ? true : false\n\n133: \n\n134:   # Default node pool configuration\n\n135:   default_node_pool {\n\n136:     temporary_name_for_rotation  = \"rotation\"\n\n137:     name                         = \"system\"\n\n138:     auto_scaling_enabled         = var.production_environment\n\n139:     node_count                   = var.production_environment ? 3 : 1\n\n140:     min_count                    = var.production_environment ? 3 : null\n\n141:     max_count                    = var.production_environment ? 7 : null\n\n142:     vm_size                      = var.production_environment ? local.vm_image[\"aks\"].size : local.vm_image[\"aks\"].size-dev\n\n143:     os_sku                       = \"AzureLinux\"\n\n144:     max_pods                     = \"75\"\n\n145:     orchestrator_version         = \"1.30.6\"\n\n146:     vnet_subnet_id               = azurerm_subnet.spoke_subnet.id\n\n147:     only_critical_addons_enabled = var.production_environment ? true : false\n\n148:     os_disk_type                 = \"Managed\"\n\n149:     os_disk_size_gb              = 128\n\n150: \n\n151:     upgrade_settings {\n\n152:       max_surge = var.production_environment ? 10 : 1\n\n153:     }\n\n154: \n\n155:     node_labels = {\n\n156:       \"system-pool\" = \"true\"\n\n157:       \"user-pool\"   = var.production_environment ? false : true\n\n158:     }\n\n159:   }\n\n160: \n\n161:   # Network profile configuration\n\n162:   network_profile {\n\n163:     network_plugin    = \"kubenet\"\n\n164:     network_policy    = \"calico\"\n\n165:     load_balancer_sku = \"standard\"\n\n166:     pod_cidr          = var.spoke-aks_pod_cidr\n\n167:   }\n\n168: \n\n169:   # System-assigned managed identity\n\n170:   identity {\n\n171:     type = \"SystemAssigned\"\n\n172:   }\n\n173: \n\n174:   tags = local.standard_tags\n\n175: }\n\n```\n\n",
      "partialFingerprint": "005b92233789cc3e:1",
      "pass": true,
      "policyId": "ckv-azure-7",
      "repoPath": "spoke-k8s_cluster.tf",
      "resource": "azurerm_kubernetes_cluster.kubernetes_cluster",
      "ruleId": "CKV_AZURE_7",
      "severity": "Medium",
      "title": "Ensure AKS cluster has Network Policy configured"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [],
      "description": "Ensure that UDP Services are restricted from the Internet",
      "evalGuid": "",
      "fileName": "spoke-network.tf",
      "filePath": "spoke-network.tf",
      "findingGuid": "f-ce166ae32013fcd09a6a67616abc0d2382e86dc5bc43ce5ade8a03b482bcb92f",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-network.tf#L91..L136",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 91,
      "lineRangeEnd": 136,
      "markdown": "Ensure that UDP Services are restricted from the Internet \n\n#### Resource\nazurerm_network_security_group.spoke_network_security_group\n\n#### File\n[spoke-network.tf : Lines 91 - 136](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-network.tf#L91..L136)\n\n#### Code\n```\n91:  resource \"azurerm_network_security_group\" \"spoke_network_security_group\" {\n\n92:    name                = \"spoke_network_security_group\"\n\n93:    location            = azurerm_resource_group.azure_resource_group.location\n\n94:    resource_group_name = azurerm_resource_group.azure_resource_group.name\n\n95:  \n\n96:    # Allow inbound HTTP traffic for applications (restricted to known sources)\n\n97:    security_rule { #tfsec:ignore:AVD-AZU-0047\n\n98:      name                       = \"inbound-http_rule\"\n\n99:      priority                   = 100\n\n100:     direction                  = \"Inbound\"\n\n101:     access                     = \"Allow\"\n\n102:     protocol                   = \"Tcp\"\n\n103:     source_port_range          = \"*\"\n\n104:     destination_port_ranges    = [\"80\", \"443\", \"8080\", \"8000\"]\n\n105:     source_address_prefixes    = [\"10.0.0.0/16\", \"172.16.0.0/12\", \"192.168.0.0/16\"]\n\n106:     destination_address_prefix = \"*\"\n\n107:   }\n\n108: \n\n109:   # Allow AKS nodes to access internet for updates\n\n110:   security_rule {\n\n111:     name                       = \"aks-node_to_internet_rule\"\n\n112:     priority                   = 100\n\n113:     direction                  = \"Outbound\"\n\n114:     access                     = \"Allow\"\n\n115:     protocol                   = \"Tcp\"\n\n116:     source_port_range          = \"*\"\n\n117:     destination_port_ranges    = [\"80\", \"443\"]\n\n118:     source_address_prefix      = \"10.0.0.0/16\"\n\n119:     destination_address_prefix = \"Internet\"\n\n120:   }\n\n121: \n\n122:   # Allow ICMP for connectivity testing (restricted to specific destinations)\n\n123:   security_rule {\n\n124:     name                         = \"icmp_to_dns_rule\"\n\n125:     priority                     = 101\n\n126:     direction                    = \"Outbound\"\n\n127:     access                       = \"Allow\"\n\n128:     protocol                     = \"Icmp\"\n\n129:     source_port_range            = \"*\"\n\n130:     destination_port_range       = \"*\"\n\n131:     source_address_prefix        = \"10.0.0.0/16\"\n\n132:     destination_address_prefixes = [\"8.8.8.8/32\", \"8.8.4.4/32\", \"1.1.1.1/32\"]\n\n133:   }\n\n134: \n\n135:   tags = local.standard_tags\n\n136: }\n\n```\n\n",
      "partialFingerprint": "c51dd7a3cac001a7:1",
      "pass": true,
      "policyId": "ckv-azure-77",
      "repoPath": "spoke-network.tf",
      "resource": "azurerm_network_security_group.spoke_network_security_group",
      "ruleId": "CKV_AZURE_77",
      "severity": "Medium",
      "title": "Ensure that UDP Services are restricted from the Internet"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS"
      ],
      "description": "Kubernetes namespaces are multiple virtual clusters backed by the same physical cluster. These are required to divide resources between multiple users/teams. Kubernetes provides a default namespace, where objects are placed if no namespace is specified for them.",
      "evalGuid": "",
      "fileName": "spoke-k8s_application-dvwa.tf",
      "filePath": "spoke-k8s_application-dvwa.tf",
      "findingGuid": "f-25f9d340c0161c9029ae78b6a1b92aed99fc64507169804eacea69cd48c7f0c6",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_application-dvwa.tf#L102..L113",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 102,
      "lineRangeEnd": 113,
      "markdown": "The default namespace should not be used\n\n#### Resource\nkubernetes_secret.dvwa_fortiweb_login_secret[0]\n\n#### File\n[spoke-k8s_application-dvwa.tf : Lines 102 - 113](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_application-dvwa.tf#L102..L113)\n\n",
      "partialFingerprint": "0febc142e32c2519:1",
      "pass": true,
      "policyId": "ckv-k8s-21",
      "repoPath": "spoke-k8s_application-dvwa.tf",
      "resource": "kubernetes_secret.dvwa_fortiweb_login_secret[0]",
      "ruleId": "CKV_K8S_21",
      "severity": "Low",
      "title": "The default namespace should not be used"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS"
      ],
      "description": "Kubernetes namespaces are multiple virtual clusters backed by the same physical cluster. These are required to divide resources between multiple users/teams. Kubernetes provides a default namespace, where objects are placed if no namespace is specified for them.",
      "evalGuid": "",
      "fileName": "spoke-k8s_application-docs.tf",
      "filePath": "spoke-k8s_application-docs.tf",
      "findingGuid": "f-b791bdb69a067221198ce2ead9c408ddc8aa0725bcfe031fe356a018939692ca",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_application-docs.tf#L49..L59",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 49,
      "lineRangeEnd": 59,
      "markdown": "The default namespace should not be used\n\n#### Resource\nkubernetes_secret.htpasswd_secret[0]\n\n#### File\n[spoke-k8s_application-docs.tf : Lines 49 - 59](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_application-docs.tf#L49..L59)\n\n#### Code\n```\n49:  resource \"kubernetes_secret\" \"htpasswd_secret\" {\n\n50:    count = var.application_docs ? 1 : 0\n\n51:    metadata {\n\n52:      name      = \"htpasswd-secret\"\n\n53:      namespace = kubernetes_namespace.docs[0].metadata[0].name\n\n54:    }\n\n55:    data = {\n\n56:      htpasswd = \"${var.htusername}:${htpasswd_password.hash.apr1}\"\n\n57:    }\n\n58:    type = \"Opaque\"\n\n59:  }\n\n```\n\n",
      "partialFingerprint": "fcfcf6b006000a02:1",
      "pass": true,
      "policyId": "ckv-k8s-21",
      "repoPath": "spoke-k8s_application-docs.tf",
      "resource": "kubernetes_secret.htpasswd_secret[0]",
      "ruleId": "CKV_K8S_21",
      "severity": "Low",
      "title": "The default namespace should not be used"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS"
      ],
      "description": "Kubernetes namespaces are multiple virtual clusters backed by the same physical cluster. These are required to divide resources between multiple users/teams. Kubernetes provides a default namespace, where objects are placed if no namespace is specified for them.",
      "evalGuid": "",
      "fileName": "spoke-k8s_application-extractor.tf",
      "filePath": "spoke-k8s_application-extractor.tf",
      "findingGuid": "f-0d70d510d8086f0dca945443b0527325b2a0f59950ff5f59f347d9ab58641124",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_application-extractor.tf#L39..L50",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 39,
      "lineRangeEnd": 50,
      "markdown": "The default namespace should not be used\n\n#### Resource\nkubernetes_secret.extractor_fortiweb_login_secret[0]\n\n#### File\n[spoke-k8s_application-extractor.tf : Lines 39 - 50](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_application-extractor.tf#L39..L50)\n\n",
      "partialFingerprint": "3b12e75065f7a232:1",
      "pass": true,
      "policyId": "ckv-k8s-21",
      "repoPath": "spoke-k8s_application-extractor.tf",
      "resource": "kubernetes_secret.extractor_fortiweb_login_secret[0]",
      "ruleId": "CKV_K8S_21",
      "severity": "Low",
      "title": "The default namespace should not be used"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS"
      ],
      "description": "Kubernetes namespaces are multiple virtual clusters backed by the same physical cluster. These are required to divide resources between multiple users/teams. Kubernetes provides a default namespace, where objects are placed if no namespace is specified for them.",
      "evalGuid": "",
      "fileName": "spoke-k8s_application-ollama.tf",
      "filePath": "spoke-k8s_application-ollama.tf",
      "findingGuid": "f-da6f22e1d6e3b822812e881795f2b0eb07682afd7ce0a4d7ceae9e530c85ee13",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_application-ollama.tf#L39..L50",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 39,
      "lineRangeEnd": 50,
      "markdown": "The default namespace should not be used\n\n#### Resource\nkubernetes_secret.ollama_fortiweb_login_secret[0]\n\n#### File\n[spoke-k8s_application-ollama.tf : Lines 39 - 50](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_application-ollama.tf#L39..L50)\n\n",
      "partialFingerprint": "9bb88163cb1c5e11:1",
      "pass": true,
      "policyId": "ckv-k8s-21",
      "repoPath": "spoke-k8s_application-ollama.tf",
      "resource": "kubernetes_secret.ollama_fortiweb_login_secret[0]",
      "ruleId": "CKV_K8S_21",
      "severity": "Low",
      "title": "The default namespace should not be used"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS"
      ],
      "description": "Kubernetes namespaces are multiple virtual clusters backed by the same physical cluster. These are required to divide resources between multiple users/teams. Kubernetes provides a default namespace, where objects are placed if no namespace is specified for them.",
      "evalGuid": "",
      "fileName": "spoke-k8s_application-video.tf",
      "filePath": "spoke-k8s_application-video.tf",
      "findingGuid": "f-62228ad0a2b9c6b158373341cf52388de408473dbf7da12e0f57c73fff996577",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_application-video.tf#L24..L35",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 24,
      "lineRangeEnd": 35,
      "markdown": "The default namespace should not be used\n\n#### Resource\nkubernetes_secret.video_fortiweb_login_secret[0]\n\n#### File\n[spoke-k8s_application-video.tf : Lines 24 - 35](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_application-video.tf#L24..L35)\n\n",
      "partialFingerprint": "adcfcacb3e0d0a40:1",
      "pass": true,
      "policyId": "ckv-k8s-21",
      "repoPath": "spoke-k8s_application-video.tf",
      "resource": "kubernetes_secret.video_fortiweb_login_secret[0]",
      "ruleId": "CKV_K8S_21",
      "severity": "Low",
      "title": "The default namespace should not be used"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": null,
      "description": "Azure AKS is a managed Kubernetes cluster service from Microsoft. AKS operationalize your workload containers on Kubernetes.  Logging is an essential way to monitor the performance of your workloads that are deployed to Kubernetes environments.",
      "evalGuid": "",
      "fileName": "spoke-k8s_cluster.tf",
      "filePath": "spoke-k8s_cluster.tf",
      "findingGuid": "f-3607fd1ecc071582fe236d825a494860ee9151284a94e9b9d56dbd91927b6d3f",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L101",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 101,
      "lineRangeEnd": 101,
      "markdown": "Azure AKS is a managed Kubernetes cluster service from Microsoft. AKS operationalize your workload containers on Kubernetes.  Logging is an essential way to monitor the performance of your workloads that are deployed to Kubernetes environments.\n\n#### Resource\nazurerm_kubernetes_cluster.kubernetes_cluster\n\n#### File\n[spoke-k8s_cluster.tf : Line 101](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L101)\n\n",
      "partialFingerprint": "005b92233789cc3e:1",
      "pass": true,
      "policyId": "lacework-iac-azure-monitoring-1",
      "repoPath": "spoke-k8s_cluster.tf",
      "resource": "azurerm_kubernetes_cluster.kubernetes_cluster",
      "ruleId": "",
      "severity": "Low",
      "title": "Ensure AKS logging to Azure Monitoring is Configured"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS"
      ],
      "description": "Ensure Kubernetes Dashboard is disabled",
      "evalGuid": "",
      "fileName": "spoke-k8s_cluster.tf",
      "filePath": "spoke-k8s_cluster.tf",
      "findingGuid": "f-53fc0866d01e9ed9ab4905649c2ee116b703a9e470aa1c113a2daaad312f98a7",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L175",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 101,
      "lineRangeEnd": 175,
      "markdown": "Ensure Kubernetes Dashboard is disabled\n\n#### Resource\nazurerm_kubernetes_cluster.kubernetes_cluster\n\n#### File\n[spoke-k8s_cluster.tf : Lines 101 - 175](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L175)\n\n#### Code\n```\n101: resource \"azurerm_kubernetes_cluster\" \"kubernetes_cluster\" {\n\n102:   depends_on = [\n\n103:     azurerm_virtual_network_peering.spoke_to_hub_virtual_network_peering,\n\n104:     azurerm_linux_virtual_machine.hub-nva_virtual_machine\n\n105:   ]\n\n106: \n\n107:   name                              = local.cluster_name\n\n108:   location                          = azurerm_resource_group.azure_resource_group.location\n\n109:   resource_group_name               = azurerm_resource_group.azure_resource_group.name\n\n110:   dns_prefix                        = azurerm_resource_group.azure_resource_group.name\n\n111:   sku_tier                          = var.production_environment ? \"Standard\" : \"Free\"\n\n112:   cost_analysis_enabled             = var.production_environment ? true : false\n\n113:   support_plan                      = \"KubernetesOfficial\"\n\n114:   kubernetes_version                = \"1.31.8\"\n\n115:   node_resource_group               = local.node_resource_group\n\n116:   role_based_access_control_enabled = true\n\n117:   oidc_issuer_enabled               = true\n\n118:   workload_identity_enabled         = true\n\n119: \n\n120:   # OMS agent for monitoring integration\n\n121:   oms_agent {\n\n122:     log_analytics_workspace_id      = azurerm_log_analytics_workspace.log_analytics.id\n\n123:     msi_auth_for_monitoring_enabled = true\n\n124:   }\n\n125: \n\n126:   # API Server access profile for security\n\n127:   api_server_access_profile {\n\n128:     authorized_ip_ranges = var.production_environment ? [\"10.0.0.0/16\", \"172.16.0.0/12\", \"192.168.0.0/16\"] : []\n\n129:   }\n\n130: \n\n131:   # Azure Policy Add-on for governance\n\n132:   azure_policy_enabled = var.production_environment ? true : false\n\n133: \n\n134:   # Default node pool configuration\n\n135:   default_node_pool {\n\n136:     temporary_name_for_rotation  = \"rotation\"\n\n137:     name                         = \"system\"\n\n138:     auto_scaling_enabled         = var.production_environment\n\n139:     node_count                   = var.production_environment ? 3 : 1\n\n140:     min_count                    = var.production_environment ? 3 : null\n\n141:     max_count                    = var.production_environment ? 7 : null\n\n142:     vm_size                      = var.production_environment ? local.vm_image[\"aks\"].size : local.vm_image[\"aks\"].size-dev\n\n143:     os_sku                       = \"AzureLinux\"\n\n144:     max_pods                     = \"75\"\n\n145:     orchestrator_version         = \"1.30.6\"\n\n146:     vnet_subnet_id               = azurerm_subnet.spoke_subnet.id\n\n147:     only_critical_addons_enabled = var.production_environment ? true : false\n\n148:     os_disk_type                 = \"Managed\"\n\n149:     os_disk_size_gb              = 128\n\n150: \n\n151:     upgrade_settings {\n\n152:       max_surge = var.production_environment ? 10 : 1\n\n153:     }\n\n154: \n\n155:     node_labels = {\n\n156:       \"system-pool\" = \"true\"\n\n157:       \"user-pool\"   = var.production_environment ? false : true\n\n158:     }\n\n159:   }\n\n160: \n\n161:   # Network profile configuration\n\n162:   network_profile {\n\n163:     network_plugin    = \"kubenet\"\n\n164:     network_policy    = \"calico\"\n\n165:     load_balancer_sku = \"standard\"\n\n166:     pod_cidr          = var.spoke-aks_pod_cidr\n\n167:   }\n\n168: \n\n169:   # System-assigned managed identity\n\n170:   identity {\n\n171:     type = \"SystemAssigned\"\n\n172:   }\n\n173: \n\n174:   tags = local.standard_tags\n\n175: }\n\n```\n\n",
      "partialFingerprint": "005b92233789cc3e:1",
      "pass": true,
      "policyId": "ckv-azure-8",
      "repoPath": "spoke-k8s_cluster.tf",
      "resource": "azurerm_kubernetes_cluster.kubernetes_cluster",
      "ruleId": "CKV_AZURE_8",
      "severity": "Low",
      "title": "Ensure Kubernetes Dashboard is disabled"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [],
      "description": "Ensure that AKS uses Azure Policies Add-on",
      "evalGuid": "",
      "fileName": "spoke-k8s_cluster.tf",
      "filePath": "spoke-k8s_cluster.tf",
      "findingGuid": "f-9eccc478c2dedf64ecd76caca717e7dc361d75e73825f1eeea488f7ca71151aa",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L175",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 101,
      "lineRangeEnd": 175,
      "markdown": "Ensure that AKS uses Azure Policies Add-on\n\n#### Resource\nazurerm_kubernetes_cluster.kubernetes_cluster\n\n#### File\n[spoke-k8s_cluster.tf : Lines 101 - 175](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_cluster.tf#L101..L175)\n\n#### Code\n```\n101: resource \"azurerm_kubernetes_cluster\" \"kubernetes_cluster\" {\n\n102:   depends_on = [\n\n103:     azurerm_virtual_network_peering.spoke_to_hub_virtual_network_peering,\n\n104:     azurerm_linux_virtual_machine.hub-nva_virtual_machine\n\n105:   ]\n\n106: \n\n107:   name                              = local.cluster_name\n\n108:   location                          = azurerm_resource_group.azure_resource_group.location\n\n109:   resource_group_name               = azurerm_resource_group.azure_resource_group.name\n\n110:   dns_prefix                        = azurerm_resource_group.azure_resource_group.name\n\n111:   sku_tier                          = var.production_environment ? \"Standard\" : \"Free\"\n\n112:   cost_analysis_enabled             = var.production_environment ? true : false\n\n113:   support_plan                      = \"KubernetesOfficial\"\n\n114:   kubernetes_version                = \"1.31.8\"\n\n115:   node_resource_group               = local.node_resource_group\n\n116:   role_based_access_control_enabled = true\n\n117:   oidc_issuer_enabled               = true\n\n118:   workload_identity_enabled         = true\n\n119: \n\n120:   # OMS agent for monitoring integration\n\n121:   oms_agent {\n\n122:     log_analytics_workspace_id      = azurerm_log_analytics_workspace.log_analytics.id\n\n123:     msi_auth_for_monitoring_enabled = true\n\n124:   }\n\n125: \n\n126:   # API Server access profile for security\n\n127:   api_server_access_profile {\n\n128:     authorized_ip_ranges = var.production_environment ? [\"10.0.0.0/16\", \"172.16.0.0/12\", \"192.168.0.0/16\"] : []\n\n129:   }\n\n130: \n\n131:   # Azure Policy Add-on for governance\n\n132:   azure_policy_enabled = var.production_environment ? true : false\n\n133: \n\n134:   # Default node pool configuration\n\n135:   default_node_pool {\n\n136:     temporary_name_for_rotation  = \"rotation\"\n\n137:     name                         = \"system\"\n\n138:     auto_scaling_enabled         = var.production_environment\n\n139:     node_count                   = var.production_environment ? 3 : 1\n\n140:     min_count                    = var.production_environment ? 3 : null\n\n141:     max_count                    = var.production_environment ? 7 : null\n\n142:     vm_size                      = var.production_environment ? local.vm_image[\"aks\"].size : local.vm_image[\"aks\"].size-dev\n\n143:     os_sku                       = \"AzureLinux\"\n\n144:     max_pods                     = \"75\"\n\n145:     orchestrator_version         = \"1.30.6\"\n\n146:     vnet_subnet_id               = azurerm_subnet.spoke_subnet.id\n\n147:     only_critical_addons_enabled = var.production_environment ? true : false\n\n148:     os_disk_type                 = \"Managed\"\n\n149:     os_disk_size_gb              = 128\n\n150: \n\n151:     upgrade_settings {\n\n152:       max_surge = var.production_environment ? 10 : 1\n\n153:     }\n\n154: \n\n155:     node_labels = {\n\n156:       \"system-pool\" = \"true\"\n\n157:       \"user-pool\"   = var.production_environment ? false : true\n\n158:     }\n\n159:   }\n\n160: \n\n161:   # Network profile configuration\n\n162:   network_profile {\n\n163:     network_plugin    = \"kubenet\"\n\n164:     network_policy    = \"calico\"\n\n165:     load_balancer_sku = \"standard\"\n\n166:     pod_cidr          = var.spoke-aks_pod_cidr\n\n167:   }\n\n168: \n\n169:   # System-assigned managed identity\n\n170:   identity {\n\n171:     type = \"SystemAssigned\"\n\n172:   }\n\n173: \n\n174:   tags = local.standard_tags\n\n175: }\n\n```\n\n",
      "partialFingerprint": "005b92233789cc3e:1",
      "pass": true,
      "policyId": "ckv-azure-116",
      "repoPath": "spoke-k8s_cluster.tf",
      "resource": "azurerm_kubernetes_cluster.kubernetes_cluster",
      "ruleId": "CKV_AZURE_116",
      "severity": "Low",
      "title": "Ensure that AKS uses Azure Policies Add-on"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS"
      ],
      "description": "Kubernetes namespaces are multiple virtual clusters backed by the same physical cluster. These are required to divide resources between multiple users/teams. Kubernetes provides a default namespace, where objects are placed if no namespace is specified for them.",
      "evalGuid": "",
      "fileName": "spoke-k8s_infrastructure-laceworks.tf",
      "filePath": "spoke-k8s_infrastructure-laceworks.tf",
      "findingGuid": "f-79ff2df51e094806df09ab432840f062597d92f91423866dbdba2cd803489dd8",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_infrastructure-laceworks.tf#L13..L31",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 13,
      "lineRangeEnd": 31,
      "markdown": "The default namespace should not be used\n\n#### Resource\nkubernetes_secret.lacework_agent_token\n\n#### File\n[spoke-k8s_infrastructure-laceworks.tf : Lines 13 - 31](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_infrastructure-laceworks.tf#L13..L31)\n\n#### Code\n```\n13:  resource \"kubernetes_secret\" \"lacework_agent_token\" {\n\n14:    metadata {\n\n15:      name      = \"lacework-agent-token\"\n\n16:      namespace = kubernetes_namespace.lacework-agent.metadata[0].name\n\n17:    }\n\n18:    data = {\n\n19:      \"config.json\" = jsonencode({\n\n20:        tokens = {\n\n21:          AccessToken = var.lw_agent_token\n\n22:        },\n\n23:        serverurl = \"https://api.lacework.net\",\n\n24:        tags = {\n\n25:          Env               = \"k8s\",\n\n26:          KubernetesCluster = azurerm_kubernetes_cluster.kubernetes_cluster.name\n\n27:        }\n\n28:      }),\n\n29:      \"syscall_config.yaml\" = \"\"\n\n30:    }\n\n31:  }\n\n```\n\n",
      "partialFingerprint": "3c5ee2012fb62e8d:1",
      "pass": true,
      "policyId": "ckv-k8s-21",
      "repoPath": "spoke-k8s_infrastructure-laceworks.tf",
      "resource": "kubernetes_secret.lacework_agent_token",
      "ruleId": "CKV_K8S_21",
      "severity": "Low",
      "title": "The default namespace should not be used"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": null,
      "description": "Azure virtual machines should have extension operations disabled to reduce attack surface and prevent unauthorized configuration changes.",
      "evalGuid": "",
      "fileName": "hub-nva.tf",
      "filePath": "hub-nva.tf",
      "findingGuid": "f-c18411dd4553812bef7fa47f40e51dd1f9151820de03aac83588835b05349afd",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-nva.tf#L153..L153",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 153,
      "lineRangeEnd": 153,
      "markdown": "Azure virtual machines should have extension operations disabled to reduce attack surface and prevent unauthorized configuration changes.\n\n#### Resource\nazurerm_linux_virtual_machine.hub-nva_virtual_machine\n\n#### File\n[hub-nva.tf : Line 153](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/hub-nva.tf#L153..L153)\n\n",
      "partialFingerprint": "df5d62504555acf7:1",
      "pass": true,
      "policyId": "lacework-iac-azure-general-1",
      "repoPath": "hub-nva.tf",
      "resource": "azurerm_linux_virtual_machine.hub-nva_virtual_machine",
      "ruleId": "",
      "severity": "Low",
      "title": "Ensure Virtual Machine Extensions are not Installed"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS"
      ],
      "description": "Kubernetes namespaces are multiple virtual clusters backed by the same physical cluster. These are required to divide resources between multiple users/teams. Kubernetes provides a default namespace, where objects are placed if no namespace is specified for them.",
      "evalGuid": "",
      "fileName": "spoke-k8s_infrastructure-cert-manager.tf",
      "filePath": "spoke-k8s_infrastructure-cert-manager.tf",
      "findingGuid": "f-6ed5013f7e8ef993af7afedc573c836e0275d6df1c7a72d146770f544846cc3a",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_infrastructure-cert-manager.tf#L52..L76",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 52,
      "lineRangeEnd": 76,
      "markdown": "The default namespace should not be used\n\n#### Resource\nkubernetes_secret.clusterissuer\n\n#### File\n[spoke-k8s_infrastructure-cert-manager.tf : Lines 52 - 76](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_infrastructure-cert-manager.tf#L52..L76)\n\n#### Code\n```\n52:  resource \"kubernetes_secret\" \"clusterissuer\" {\n\n53:    metadata {\n\n54:      name      = \"clusterissuer\"\n\n55:      namespace = kubernetes_namespace.cert-manager.metadata[0].name\n\n56:    }\n\n57:    data = {\n\n58:      server            = var.letsencrypt_url\n\n59:      email             = var.owner_email\n\n60:      resourceGroupName = azurerm_resource_group.azure_resource_group.name\n\n61:      subscriptionID    = var.arm_subscription_id\n\n62:      hostedZoneName    = var.dns_zone\n\n63:      clientID          = data.azurerm_user_assigned_identity.cert_manager_data.client_id\n\n64:      checksum = md5(\n\n65:        jsonencode({\n\n66:          server            = var.letsencrypt_url\n\n67:          email             = var.owner_email\n\n68:          resourceGroupName = azurerm_resource_group.azure_resource_group.name\n\n69:          subscriptionID    = var.arm_subscription_id\n\n70:          hostedZoneName    = var.dns_zone\n\n71:          clientID          = data.azurerm_user_assigned_identity.cert_manager_data.client_id\n\n72:        })\n\n73:      )\n\n74:    }\n\n75:    type = \"Opaque\"\n\n76:  }\n\n```\n\n",
      "partialFingerprint": "9f179f02aa323b40:1",
      "pass": true,
      "policyId": "ckv-k8s-21",
      "repoPath": "spoke-k8s_infrastructure-cert-manager.tf",
      "resource": "kubernetes_secret.clusterissuer",
      "ruleId": "CKV_K8S_21",
      "severity": "Low",
      "title": "The default namespace should not be used"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS"
      ],
      "description": "Kubernetes namespaces are multiple virtual clusters backed by the same physical cluster. These are required to divide resources between multiple users/teams. Kubernetes provides a default namespace, where objects are placed if no namespace is specified for them.",
      "evalGuid": "",
      "fileName": "spoke-k8s_application-artifacts.tf",
      "filePath": "spoke-k8s_application-artifacts.tf",
      "findingGuid": "f-f9f144a9282ee92a7c473bc82add37bb452b41a2329465cf79108a28c8cb73c1",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_application-artifacts.tf#L39..L50",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 39,
      "lineRangeEnd": 50,
      "markdown": "The default namespace should not be used\n\n#### Resource\nkubernetes_secret.artifacts_fortiweb_login_secret[0]\n\n#### File\n[spoke-k8s_application-artifacts.tf : Lines 39 - 50](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_application-artifacts.tf#L39..L50)\n\n",
      "partialFingerprint": "83ca2626342b4204:1",
      "pass": true,
      "policyId": "ckv-k8s-21",
      "repoPath": "spoke-k8s_application-artifacts.tf",
      "resource": "kubernetes_secret.artifacts_fortiweb_login_secret[0]",
      "ruleId": "CKV_K8S_21",
      "severity": "Low",
      "title": "The default namespace should not be used"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS"
      ],
      "description": "Kubernetes namespaces are multiple virtual clusters backed by the same physical cluster. These are required to divide resources between multiple users/teams. Kubernetes provides a default namespace, where objects are placed if no namespace is specified for them.",
      "evalGuid": "",
      "fileName": "spoke-k8s_infrastructure-cert-manager.tf",
      "filePath": "spoke-k8s_infrastructure-cert-manager.tf",
      "findingGuid": "f-1c05f7b64351cd7937c8b548eb20a36ab36dd11ddf44f01b16351e8f513ab561",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_infrastructure-cert-manager.tf#L40..L50",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 40,
      "lineRangeEnd": 50,
      "markdown": "The default namespace should not be used\n\n#### Resource\nkubernetes_secret.cert-manager_fortiweb_login_secret\n\n#### File\n[spoke-k8s_infrastructure-cert-manager.tf : Lines 40 - 50](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_infrastructure-cert-manager.tf#L40..L50)\n\n",
      "partialFingerprint": "0aea01163d6fb32e:1",
      "pass": true,
      "policyId": "ckv-k8s-21",
      "repoPath": "spoke-k8s_infrastructure-cert-manager.tf",
      "resource": "kubernetes_secret.cert-manager_fortiweb_login_secret",
      "ruleId": "CKV_K8S_21",
      "severity": "Low",
      "title": "The default namespace should not be used"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS"
      ],
      "description": "Kubernetes namespaces are multiple virtual clusters backed by the same physical cluster. These are required to divide resources between multiple users/teams. Kubernetes provides a default namespace, where objects are placed if no namespace is specified for them.",
      "evalGuid": "",
      "fileName": "spoke-k8s_application-docs.tf",
      "filePath": "spoke-k8s_application-docs.tf",
      "findingGuid": "f-ed47d540700a26be71558c1e7d1c1d339ac9bcdf33cba9a812b15c67d48cf0d7",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_application-docs.tf#L61..L72",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 61,
      "lineRangeEnd": 72,
      "markdown": "The default namespace should not be used\n\n#### Resource\nkubernetes_secret.docs_fortiweb_login_secret[0]\n\n#### File\n[spoke-k8s_application-docs.tf : Lines 61 - 72](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_application-docs.tf#L61..L72)\n\n",
      "partialFingerprint": "7064b959abe406c3:1",
      "pass": true,
      "policyId": "ckv-k8s-21",
      "repoPath": "spoke-k8s_application-docs.tf",
      "resource": "kubernetes_secret.docs_fortiweb_login_secret[0]",
      "ruleId": "CKV_K8S_21",
      "severity": "Low",
      "title": "The default namespace should not be used"
    },
    {
      "assessmentGuid": "b186fa0c-c919-44c7-a957-e7d39ee8a200",
      "autofix": false,
      "checkType": "terraform",
      "compliance": [
        "CIS"
      ],
      "description": "Kubernetes namespaces are multiple virtual clusters backed by the same physical cluster. These are required to divide resources between multiple users/teams. Kubernetes provides a default namespace, where objects are placed if no namespace is specified for them.",
      "evalGuid": "",
      "fileName": "spoke-k8s_infrastructure-ingress-helper.tf",
      "filePath": "spoke-k8s_infrastructure-ingress-helper.tf",
      "findingGuid": "f-1c3d2b97b8890e2ab5be77032417b5538612d1d10123afccf071925b8c829ff3",
      "gitFilePermaLink": "https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_infrastructure-ingress-helper.tf#L13..L24",
      "isModuleReference": false,
      "isSuppressed": false,
      "line": 13,
      "lineRangeEnd": 24,
      "markdown": "The default namespace should not be used\n\n#### Resource\nkubernetes_secret.ingress-helper_fortiweb_login_secret[0]\n\n#### File\n[spoke-k8s_infrastructure-ingress-helper.tf : Lines 13 - 24](https://github.com/40docs/infrastructure/blob/72e21d99a63c97cd3b84080c9b96512a3035f877/spoke-k8s_infrastructure-ingress-helper.tf#L13..L24)\n\n",
      "partialFingerprint": "0039e539bc142d83:1",
      "pass": true,
      "policyId": "ckv-k8s-21",
      "repoPath": "spoke-k8s_infrastructure-ingress-helper.tf",
      "resource": "kubernetes_secret.ingress-helper_fortiweb_login_secret[0]",
      "ruleId": "CKV_K8S_21",
      "severity": "Low",
      "title": "The default namespace should not be used"
    }
  ],
  "gitBranch": "feature/terraform-style-guide-refactor-cleanup",
  "gitCommit": "72e21d99a63c97cd3b84080c9b96512a3035f877",
  "gitCommitDetails": {
    "email": "rmordasiewicz@fortinet-us.com@CLOUDSHELL.ovxhtzhil4junfb0ptvwmkgowe.bx.internal.cloudapp.net",
    "name": "rmordasiewicz@fortinet-us.com",
    "timestamp": "2025-07-31T11:19:31-04:00"
  },
  "gitProvider": "GitHub",
  "gitRepo": "github.com/40docs/infrastructure",
  "gitRepoName": "40docs/infrastructure",
  "gitRepoUrl": "https://github.com/40docs/infrastructure.git",
  "inventory": {
    "cdk_directories": [],
    "ci_systems": [
      "github"
    ],
    "cloudformation_files": [],
    "docker_directories": [],
    "dockerfiles": [],
    "go_directories": [],
    "helm_charts": [],
    "java_directories": [],
    "kubernetes_manifest_directories": [],
    "kustomize_directories": [],
    "node_directories": [],
    "python_directories": [],
    "ruby_directories": [],
    "terraform_modules": [
      "."
    ],
    "terraform_plan_files": [],
    "terraform_root_modules": [
      "."
    ]
  },
  "metadata": {
    "assessmentDirectory": ".",
    "assessmentSucceeded": false,
    "ciEnvironment": {
      "CODESEC_CI_SYSTEM": "",
      "CODESEC_GIT_BRANCH": "feature/terraform-style-guide-refactor-cleanup",
      "CODESEC_GIT_COMMIT": "72e21d99a63c97cd3b84080c9b96512a3035f877",
      "CODESEC_GIT_COMMIT_SHORT": "72e21d9",
      "CODESEC_GIT_DESCRIBE": "72e21d9",
      "CODESEC_GIT_REMOTE": "github.com/40docs/infrastructure",
      "CODESEC_HOSTNAME": "CLOUDSHELL"
    },
    "configs": {},
    "profile": "default",
    "scanInfo": {
      "command": "/home/rmordasiewicz@fortinet-us.com/.config/lacework/components/iac/iac scan --format json",
      "completedAt": "2025-07-31T15:48:34.104Z",
      "duration": "8.358009254s",
      "failedScans": 2,
      "iacVersion": "v0.10.31",
      "laceworkCLIVersion": "2.5.0",
      "passedScans": 1,
      "scans": [
        {
          "command": "/tmp/tmp2866751156/tmp_opal/opal run --format json --include /tmp/policy2705842242 --input-type tf .",
          "commandStatus": {
            "exitCode": 1
          },
          "completedAt": "2025-07-31T15:48:27.369Z",
          "duration": "1.622496516s",
          "findings": 6,
          "scanType": "terraform",
          "scanner": "opal",
          "startedAt": "2025-07-31T15:48:25.746Z"
        },
        {
          "command": "/home/rmordasiewicz@fortinet-us.com/.config/lacework/iac/downloads/aquasecurity-tfsec/v1.27.6/aquasecurity-tfsec --no-color -f json --include-ignored --include-passed .",
          "commandStatus": {
            "exitCode": 1
          },
          "completedAt": "2025-07-31T15:48:31.16Z",
          "duration": "5.413420548s",
          "findings": 16,
          "scanType": "terraform",
          "scanner": "tfsec",
          "startedAt": "2025-07-31T15:48:25.746Z"
        },
        {
          "command": "docker run --rm -v /home/rmordasiewicz@fortinet-us.com/40docs/infrastructure:/src -w /src/. lacework/iac-checkov:iac-v2-stable -o json -s --skip-download -d . --framework terraform",
          "commandStatus": {
            "exitCode": 0
          },
          "completedAt": "2025-07-31T15:48:34.1Z",
          "duration": "8.353864703s",
          "findings": 35,
          "scanType": "terraform",
          "scanner": "checkov",
          "startedAt": "2025-07-31T15:48:25.746Z"
        }
      ],
      "skippedScans": 0,
      "startedAt": "2025-07-31T15:48:25.746Z",
      "totalScans": 3
    },
    "scanProfiles": {
      "local": {
        "default": {
          "iac": {
            "enabled": null,
            "pullRequest": {},
            "scan": {}
          },
          "sca": {
            "enabled": null,
            "pullRequest": {},
            "scan": {}
          }
        }
      },
      "merged": {
        "default": {
          "iac": {
            "enabled": true,
            "pullRequest": {
              "auditMode": false,
              "commentOnlyHighAndCritical": false,
              "comments": true
            },
            "scan": {
              "autofix": false,
              "awsCdk": false,
              "checkov": true,
              "checkovModuleDownload": false,
              "cloudformation": true,
              "dockerfile": true,
              "exceptions": [],
              "helm": true,
              "kubernetes": true,
              "kustomize": true,
              "opal": true,
              "scanGitSubModules": false,
              "terraform": true,
              "terraformPlan": true,
              "tfsec": true
            }
          },
          "sca": {
            "enabled": true,
            "pullRequest": {
              "auditMode": false,
              "commentOnlyHighAndCritical": false,
              "comments": true
            },
            "scan": {
              "acf": false,
              "acfLocations": 5,
              "acfLocationsFull": [],
              "activeOnly": false,
              "dynamic": false,
              "dynamicDev": false,
              "evalDirectOnly": false,
              "exceptions": [],
              "exclude": [],
              "fixSuggestions": false,
              "fullBazel": false,
              "generateLockFiles": false,
              "inactiveOnly": false,
              "includeDev": false,
              "javaIndirect": true,
              "javaLocalCache": true,
              "licenseCategoriesNotAllowed": [
                "forbidden",
                "restricted"
              ],
              "licenseDetection": true,
              "linesOfCode": true,
              "pullDeps": true,
              "recurseSubmodules": false,
              "sast": true,
              "scr": true,
              "secret": true,
              "taintAnalysis": false,
              "vulnEvaluation": true
            }
          }
        }
      },
      "remote": {
        "default": {
          "iac": {
            "enabled": true,
            "pullRequest": {
              "auditMode": false,
              "commentOnlyHighAndCritical": false,
              "comments": true
            },
            "scan": {
              "autofix": false,
              "awsCdk": false,
              "checkov": true,
              "checkovModuleDownload": false,
              "cloudformation": true,
              "dockerfile": true,
              "exceptions": [],
              "helm": true,
              "kubernetes": true,
              "kustomize": true,
              "opal": true,
              "scanGitSubModules": false,
              "terraform": true,
              "terraformPlan": true,
              "tfsec": true
            }
          },
          "sca": {
            "enabled": true,
            "pullRequest": {
              "auditMode": false,
              "commentOnlyHighAndCritical": false,
              "comments": true
            },
            "scan": {
              "acf": false,
              "acfLocations": 5,
              "acfLocationsFull": [],
              "activeOnly": false,
              "dynamic": false,
              "dynamicDev": false,
              "evalDirectOnly": false,
              "exceptions": [],
              "exclude": [],
              "fixSuggestions": false,
              "fullBazel": false,
              "generateLockFiles": false,
              "inactiveOnly": false,
              "includeDev": false,
              "javaIndirect": true,
              "javaLocalCache": true,
              "licenseCategoriesNotAllowed": [
                "forbidden",
                "restricted"
              ],
              "licenseDetection": true,
              "linesOfCode": true,
              "pullDeps": true,
              "recurseSubmodules": false,
              "sast": true,
              "scr": true,
              "secret": true,
              "taintAnalysis": false,
              "vulnEvaluation": true
            }
          }
        }
      }
    },
    "uploadedAt": "2025-07-31T15:48:34.105Z"
  },
  "metrics": {
    "complianceFindings": {
      "CIS": 1,
      "CIS_AND_HIPAA": 1,
      "HIPAA": 1
    },
    "findings": 49,
    "findingsCritical": 12,
    "findingsFail": 7,
    "findingsFailAutofixFalse": 7,
    "findingsFailAutofixTrue": 0,
    "findingsFailCritical": 2,
    "findingsFailHigh": 2,
    "findingsFailInfo": 0,
    "findingsFailLow": 0,
    "findingsFailMedium": 3,
    "findingsHigh": 9,
    "findingsInfo": 0,
    "findingsLow": 15,
    "findingsMedium": 13,
    "findingsPass": 42,
    "findingsPassAutofixFalse": 42,
    "findingsPassAutofixTrue": 0,
    "findingsPassCritical": 10,
    "findingsPassHigh": 7,
    "findingsPassInfo": 0,
    "findingsPassLow": 15,
    "findingsPassMedium": 10,
    "suppressedFindings": 0,
    "suppressedFindingsCritical": 0,
    "suppressedFindingsFail": 0,
    "suppressedFindingsFailAutofixFalse": 0,
    "suppressedFindingsFailAutofixTrue": 0,
    "suppressedFindingsFailCritical": 0,
    "suppressedFindingsFailHigh": 0,
    "suppressedFindingsFailInfo": 0,
    "suppressedFindingsFailLow": 0,
    "suppressedFindingsFailMedium": 0,
    "suppressedFindingsHigh": 0,
    "suppressedFindingsInfo": 0,
    "suppressedFindingsLow": 0,
    "suppressedFindingsMedium": 0,
    "suppressedFindingsPass": 0,
    "suppressedFindingsPassAutofixFalse": 0,
    "suppressedFindingsPassAutofixTrue": 0,
    "suppressedFindingsPassCritical": 0,
    "suppressedFindingsPassHigh": 0,
    "suppressedFindingsPassInfo": 0,
    "suppressedFindingsPassLow": 0,
    "suppressedFindingsPassMedium": 0
  },
  "startedAt": "2025-07-31T15:48:25.746Z"
}
